{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"MatPly","text":"<pre><code>    __  ___      __  ____  __     \n   /  |/  /___ _/ /_/ __ \\/ /_  __\n  / /|_/ / __ `/ __/ /_/ / / / / /\n / /  / / /_/ / /_/ ____/ / /_/ / \n/_/  /_/\\__,_/\\__/_/   /_/\\__, /  \n                         /____/   \n</code></pre>"},{"location":"#matply_1","title":"\ud83d\udca1\u4ec0\u4e48\u662fMatPly\uff1f","text":"<p>MatPly\u662f\u4f7f\u7528C\u8bed\u8a00\u5b9e\u73b0\u5e76\u88ab\u8f6c\u6362\u4e3a\u591a\u4e2a\u8bed\u8a00\u7248\u672c\u7684\u77e9\u9635\u64cd\u4f5c\u5e93 MatPly\u7684\u8fd0\u884c\u673a\u5236\u5982\u4e0b\uff1a </p>"},{"location":"#_1","title":"\ud83d\udcbb\u5e73\u53f0\u652f\u6301","text":"<pre>\n\u2705 Windows       \u2705 Linux     \u2705 Android     \n\u274e Mac           \u274e Web       \u274e IOS\n</pre>"},{"location":"#_2","title":"\ud83d\udd17\u7f51\u9875\u6587\u6863\u7248\u672c","text":"<p>https://www.robot-shadow.cn/src/pkg/MatPly_Dart/site/</p>"},{"location":"#github","title":"\ud83d\udd17Github\u5730\u5740","text":"<p>https://github.com/PythonnotJava/MatPly</p>"},{"location":"#pub","title":"\ud83d\udd17pub\u4ed3\u5e93","text":"<p>https://pub.dev/packages/matply</p>"},{"location":"#_3","title":"\u6848\u4f8b\u5730\u5740","text":"<p>https://github.com/PythonnotJava/MatPly_demo</p> <p>\u26a0\ufe0fWarning</p> <p> Matply\u5728\u8c03\u7528C API\u65f6\u91c7\u7528\u7684dll\u6587\u4ef6\uff0c \u7531\u6e90\u4ee3\u7801\u4f7f\u7528Path\u4ecepub\u4e0b\u8f7d\u6e90\u5bfb\u627edll\u7684\u7edd\u5bf9\u8def\u5f84\uff0c \u7136\u800c\uff0c\u5728\u5b9e\u9645\u5f00\u53d1\u7684\u65f6\u5019\uff0c\u5982Flutter\u7f16\u8bd1\u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6\u5230\u522b\u7684\u5ba2\u6237\u7aef\u73af\u5883\u3002 \u662f\u4f1a\u53d1\u751fdll\u67e5\u627e\u5931\u8d25\u7684\u95ee\u9898\uff0c\u8fd9\u65f6\u60a8\u9700\u8981\u4eceMatPly\u7684\u6e90\u4ee3\u7801\uff08\u9ed8\u8ba4\u662fC:\\Users\\USERNAME\\AppData\\Local\\Pub\\Cache\\hosted\uff09\u4e2d\u5c06\u4f9d\u8d56\u7684dll\u590d\u5236\u5230\u60a8\u7684\u8d44\u6e90\u6587\u4ef6\u5939\u4e2d\u3002\u91cd\u65b0\u8d4b\u503c\u8def\u5f84\u5230pubCacheDir\u5373\u53ef\u3002 </p>"},{"location":"#news","title":"\ud83d\udcf0 News","text":"<ul> <li>C-based OpenMP optimization and native asynchronous support.[New from V1.1.0]</li> </ul>"},{"location":"API/Dart/","title":"\u5982\u4f55\u6784\u5efaDart\u7248\u672c\u7684API\uff1f","text":"<p>MatPly for Dart\u4f7f\u7528Dart FFI\u63d0\u4f9b\u7684C\u8bed\u8a00\u63a5\u53e3\uff0c\u5c06\u539f\u751fC\u8bed\u8a00\u4ee3\u7801\u7f16\u8bd1\u4e3a\u5404\u4e2a\u5e73\u53f0\u7684\u94fe\u63a5\u5e93\uff08\u8fd9\u91cc\u662fWindows\u4e0b\u7684dll\u6587\u4ef6\uff09\uff0c\u5177\u4f53\u6d41\u7a0b\u53ef\u53c2\u8003https://dart.dev/interop/c-interop</p>"},{"location":"API/Dart/#c","title":"C\u539f\u751f\u51fd\u6570\u4e0e\u5e38\u91cf","text":"<p>\u5bf9\u77e9\u9635\u7684\u4e00\u7cfb\u5217\u64cd\u4f5c\uff0c\u5b8c\u5168\u4f7f\u7528C\u8bed\u8a00\u5b9e\u73b0\uff0c\u800c\u5728Dart\u4e2d\uff0c\u53ea\u9700\u8981\u5728\u5c01\u88c5\u529f\u80fd\u65f6\u505a\u597d\u9519\u8bef\u68c0\u67e5\u5373\u53ef\u3002</p> <p>\u5e38\u91cf\u7cfb\u5217\uff0c\u5b8c\u5168\u91c7\u7528C\u539f\u751fMath\u5e93\u4e2d\u7684\u5e38\u91cf\uff0c\u800c\u4e14\u89e3\u6790\u5230Dart\u4e2d\uff0c\u662f\u5b8c\u5168\u652f\u6301Dart\u7684\u8bed\u6cd5\u5206\u6790\u7684\uff0c\u5982\u4e0b\u6848\u4f8b</p> <pre><code>import 'lib/matply.dart';\n\n/// Constant tests\nmain(){\n  print(e);\n  print(Pi);\n  print(nan.isNaN);\n  print(inf.isInfinite);\n  print(negativeinf.isNegative);\n  print(e * inf);\n  print(euler); \n}\n\n/* outputs : \n2.718281828459045\n3.141592653589793\ntrue\ntrue\ntrue\nInfinity\n0.5772156649015329\n* */\n</code></pre> <p>\u4e0b\u4e00\u7bc7\uff1a\u5bf9\u77e9\u9635\u7684\u5168\u5c40\u8bbe\u7f6e</p>"},{"location":"API/Dart/constructor/","title":"\u6784\u9020\u51fd\u6570","text":""},{"location":"API/Dart/constructor/#_2","title":"\u9ed8\u8ba4\u6784\u9020\u51fd\u6570","text":"<pre><code>MatrixType(\n  List&lt;List&lt;double&gt;&gt; data, {\n    int? row,\n    int? column,\n    bool identityMatrix = false,\n    bool principalDiagonalMatrix = false,\n    bool subDiagonalMatrix = false,\n    bool upperTriangularMatrix = false,\n    bool lowerTriangularMatrix = false,\n    bool singularMatrix  = false\n  })\n</code></pre> <ol> <li>\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u5fc5\u987b\u4f20\u5165\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\uff0c\u5e76\u63a5\u53d7\u6307\u5b9a\u4e00\u4e9b\u77e9\u9635\u7684\u7279\u6b8a\u6027\u8d28\uff0c\u5bf9\u4e8e\u8be5\u7279\u6b8a\u6027\u8d28\u5e76\u672a\u505a\u51fa\u4efb\u4f55\u64cd\u4f5c\uff0c\u8003\u8651\u5230\u4e00\u4e9b\u77e9\u9635\u7684\u7279\u6b8a\u6027\u8d28\u2014\u2014\u5982\u5bf9\u89d2\u65b9\u9635\u53ef\u4ee5\u4ee5O(n)\u7684\u590d\u6742\u5ea6\u6c42\u89e3\u884c\u5217\u5f0f\u503c\uff0c\u8be5\u6027\u8d28\u53ef\u4ee5\u89c6\u4e3a\u505a\u51fa\u7b80\u6613\u8ba1\u7b97\u7684\u63a5\u53e3\u3002</li> <li>\u6ce8\uff1a\u81eaV1.0.8\u5f00\u59cb\uff0c\u57fa\u672c\u6784\u9020\u51fd\u6570\u6dfb\u52a0\u4e86\u9009\u62e9\u6027\u4f20\u5165\u5f62\u72b6\uff08\u5982\u679c\u5df2\u77e5\uff0c\u4f46\u5fc5\u987b\u4fdd\u8bc1\u6b63\u6574\u6570\uff0c\u4e0d\u505a\u68c0\u67e5\uff09\uff0c\u5219\u514d\u53bb\u4e86\u8ba1\u7b97\u673a\u81ea\u52a8\u8ba1\u7b97\u5f62\u72b6\u3002</li> </ol>"},{"location":"API/Dart/constructor/#example","title":"example","text":"<pre><code>main() {\n  final List&lt;List&lt;double&gt;&gt; list = [\n    [1, 2, 3],\n    [4, 5, 6],\n    [7, 8, 9],\n    [1, 5, 9]\n  ];\n  MatrixType(list).visible();\n}\n\n/* outputs\n[\n [1.00000    2.00000     3.00000    ]\n [4.00000    5.00000     6.00000    ]\n [7.00000    8.00000     9.00000    ]\n [1.00000    5.00000     9.00000    ]\n]\n */\n</code></pre>"},{"location":"API/Dart/constructor/#number","title":"\u751f\u6210\u4e00\u4e2a\u5168\u662fnumber\u6570\u636e\u7684\u77e9\u9635","text":"<pre><code>MatrixType.filled({\n    required double number,\n    required int row,\n    required int column\n  })\n</code></pre> <p>\u5168number\u77e9\u9635\u4f1a\u751f\u6210row\u548ccolumn\u5927\u5c0f\uff0c\u5bf9row\u548ccolumn\u7684\u68c0\u67e5\u4e0d\u4f1a\u5728C\u8bed\u8a00\u4e2d\u5b9e\u73b0\uff0c\u800c\u662f\u4ea4\u7ed9\u4e86Dart\u6765\u505a\u3002\u5728MartixType\u7684\u6240\u6709\u529f\u80fd\u90fd\u662f\u8fd9\u79cd\u539f\u7406\u3002</p>"},{"location":"API/Dart/constructor/#example_1","title":"example","text":"<pre><code>main() {\n  set_visible_round('%.0f');\n  MatrixType.filled(number: 4, row: 3, column: 5).visible();\n}\n\n/* outputs\n[\n [4 4 4 4 4]\n [4 4 4 4 4]\n [4 4 4 4 4]\n]\n */\n</code></pre>"},{"location":"API/Dart/constructor/#0-1","title":"\u5168 0 / 1 \u77e9\u9635","text":"<pre><code>MatrixType.zeros({\n    required int row,\n    required int column\n  })\n\nMatrixType.ones({\n    required int row,\n    required int column\n  })\n</code></pre>"},{"location":"API/Dart/constructor/#example_2","title":"example","text":"<pre><code>main() {\n  set_visible_round('%.0f');\n  MatrixType.ones(row: 3, column: 3).visible();\n  MatrixType.zeros(row: 2, column: 4).visible();\n}\n\n/* outputs\n[\n [1 1 1]\n [1 1 1]\n [1 1 1]\n]\n[\n [0 0 0 0]\n [0 0 0 0]\n]\n */\n</code></pre>"},{"location":"API/Dart/constructor/#start1","title":"\u521b\u5efa\u4ecestart\u5f00\u59cb\uff0c\u95f4\u9694\u4e3a1\u7684\u8fde\u7eed\u6570\u636e\u7684\u77e9\u9635","text":"<pre><code> MatrixType.arrange({\n    required double? start,\n    required int row,\n    required int column\n  })\n</code></pre>"},{"location":"API/Dart/constructor/#example_3","title":"example","text":"<pre><code>main() {\n\n  MatrixType.arrange(start: 0, row: 2, column: 10).visible();\n}\n\n/* outputs\n[\n [0.00000    1.00000     2.00000     3.00000     4.00000     5.00000     6.00000     7.00000     8.00000     9.00000    ]\n [10.00000   11.00000    12.00000    13.00000    14.00000    15.00000    16.00000    17.00000    18.00000    19.00000   ]\n]\n */\n</code></pre>"},{"location":"API/Dart/constructor/#startendrow-column","title":"\u521b\u5efa\u4ecestart\u5f00\u59cb\uff0c\u5230end\u7ed3\u675f\uff0c\u9014\u4e2d\u5206\u4e3arow * column\u4efd\u6570\u7684\u77e9\u9635","text":"<pre><code> MatrixType.linspace({\n    required double start,\n    required double end,\n    required int row,\n    required int column,\n    bool keep = true\n  }) \n</code></pre> <p>keep\u53c2\u6570\u51b3\u5b9a\u4e86\u662f\u5426\u4fdd\u7559end</p>"},{"location":"API/Dart/constructor/#example_4","title":"example","text":"<pre><code>main() {\n  MatrixType.linspace(start: 0, end: 10, row: 1, column: 10, keep: true).visible();\n  MatrixType.linspace(start: 0, end: 10, row: 1, column: 10, keep: false).visible();\n}\n\n/* outputs\n[\n [0.00000    1.11111     2.22222     3.33333     4.44444     5.55556     6.66667     7.77778     8.88889     10.00000   ]\n]\n[\n [0.00000    1.00000     2.00000     3.00000     4.00000     5.00000     6.00000     7.00000     8.00000     9.00000    ]\n]\n */\n</code></pre>"},{"location":"API/Dart/constructor/#n","title":"\u521b\u5efan\u9636\u5355\u4f4d\u77e9\u9635","text":"<pre><code>MatrixType.E({required int n})\n</code></pre>"},{"location":"API/Dart/constructor/#example_5","title":"example","text":"<pre><code>main() {\n  set_visible_round('%.0f');\n  MatrixType.E(n: 5).visible();\n}\n\n/* outputs\n[\n [1 0 0 0 0]\n [0 1 0 0 0]\n [0 0 1 0 0]\n [0 0 0 1 0]\n [0 0 0 0 1]\n]\n */\n</code></pre>"},{"location":"API/Dart/constructor/#_3","title":"\u751f\u6210\u7b26\u5408\u5747\u5300\u5206\u5e03\u7684\u6570\u636e","text":"<pre><code>MatrixType.uniform({\n    double start = .0,\n    double end = 1.0,\n    required int row,\n    required int column,\n    int? seed\n  }) \n</code></pre> <p>seed\u8868\u660e\u4f60\u662f\u5426\u8bbe\u7f6e\u9488\u5bf9\u6b64\u968f\u673a\u5206\u5e03\u7684\u79cd\u5b50</p>"},{"location":"API/Dart/constructor/#example_6","title":"example","text":"<pre><code>// \u57fa\u4e8eFL_chart\u5b9e\u73b0\u5bf9\u5747\u5300\u5206\u5e03\u7684\u6563\u70b9\u56fe\u53ef\u89c6\u5316\nimport 'package:flutter/material.dart';\nimport 'package:fl_chart/fl_chart.dart';\nimport 'matply.dart';\n\nvoid main() {\n  runApp(const MyApp());\n}\n\nclass MyApp extends StatelessWidget {\n  const MyApp({super.key});\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      title: 'Flutter Demo',\n      theme: ThemeData(\n        colorScheme: ColorScheme.fromSeed(seedColor: Colors.deepPurple),\n        useMaterial3: true,\n      ),\n      home: const MyHomePage(),\n    );\n  }\n}\n\nclass MyHomePage extends StatefulWidget {\n  const MyHomePage({super.key});\n  @override\n  State&lt;MyHomePage&gt; createState() =&gt; _MyHomePageState();\n}\n\nfinal List&lt;double&gt; xp = MatrixType.uniform(row: 1, column: 1000, seed: 1)[0] as List&lt;double&gt;;\nfinal List&lt;double&gt; yp = MatrixType.uniform(row: 1, column: 1000, seed: 2)[0] as List&lt;double&gt;;\n\nList&lt;ScatterSpot&gt; points = List.generate(xp.length, (i) {\n  return ScatterSpot(xp[i], yp[i]);\n});\n\nclass _MyHomePageState extends State&lt;MyHomePage&gt; {\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n        appBar: AppBar(\n          backgroundColor: Theme.of(context).colorScheme.inversePrimary,\n        ),\n        body: Center(\n          child: ScatterChart(\n              ScatterChartData(\n                  scatterSpots: points\n              )\n          ),\n        )\n    );\n  }\n}\n</code></pre>"},{"location":"API/Dart/constructor/#_4","title":"\u6548\u679c\u5982\u4e0b","text":""},{"location":"API/Dart/constructor/#_5","title":"\u751f\u6210\u7b26\u5408\u6b63\u6001\u5206\u5e03\u6570\u636e","text":"<pre><code>MatrixType.normal({\n    double mu = 0.0,\n    double sigma = 1.0,\n    required int row,\n    required int column,\n    int? seed\n  })\n</code></pre> <p>\u8be5\u6b63\u6001\u5206\u5e03\u6570\u636e\u7684\u62df\u5408\u57fa\u4e8eBox-Muller\u65b9\u6cd5\uff0c\u611f\u8c22@Djl\u7684\u8d21\u732e\uff0c\u7531\u4e8e\u662f\u81ea\u5df1\u6309\u7167\u539f\u7406\u5b9e\u73b0\uff0c\u56e0\u6b64\u7565\u6709\u7cbe\u5ea6\u8bef\u5dee</p>"},{"location":"API/Dart/constructor/#example_7","title":"example","text":"<pre><code>import 'dart:math';\n\nimport 'package:flutter/material.dart';\nimport 'package:fl_chart/fl_chart.dart';\nimport 'matply.dart';\n\nvoid main() {\n  runApp(const MyApp());\n}\n\nclass MyApp extends StatelessWidget {\n  const MyApp({super.key});\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      title: 'Flutter Demo',\n      theme: ThemeData(\n        colorScheme: ColorScheme.fromSeed(seedColor: Colors.deepPurple),\n        useMaterial3: true,\n      ),\n      home: const MyHomePage(),\n    );\n  }\n}\n\nclass MyHomePage extends StatefulWidget {\n  const MyHomePage({super.key});\n  @override\n  State&lt;MyHomePage&gt; createState() =&gt; _MyHomePageState();\n}\n\nvar mt = MatrixType.normal(row: 1, column: 1000, mu: 1.0, sigma: 2.0);\nList&lt;double&gt; ps = mt[0] as List&lt;double&gt;;\n\nvar fx = (double x) =&gt; (1 / (sqrt(2 * Pi) * 2.0) ) * exp(-(x - 1.0) * (x - 1.0) / (2 * 2.0 * 2.0));\n\nList&lt;ScatterSpot&gt; points = List.generate(ps.length, (i) =&gt; ScatterSpot(ps[i], fx(ps[i])));\n\nclass _MyHomePageState extends State&lt;MyHomePage&gt; {\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(\n        backgroundColor: Theme.of(context).colorScheme.inversePrimary,\n        actions: [\n          Text('\u5747\u503c : ${mt.mean()}'),\n        ],\n      ),\n      body: Center(\n        child: ScatterChart(\n          ScatterChartData(\n            scatterSpots: points\n          )\n        )\n      )\n    );\n  }\n}\n</code></pre>"},{"location":"API/Dart/constructor/#_6","title":"\u4ece\u6570\u636e\u70b9\u62df\u5408\u7684\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u6548\u679c\u5982\u4e0b","text":"<p>\u7ecf\u8ba1\u7b97\uff0c\u5747\u503c\u4e3a0.97\uff0c\u4e0e\u89c4\u5b9a\u76841.0\u5927\u5dee\u4e0d\u5dee </p>"},{"location":"API/Dart/constructor/#_7","title":"\u751f\u6210\u7b26\u5408\u6cca\u677e\u5206\u5e03\u6570\u636e","text":"<pre><code> MatrixType.poisson({\n    required double lambda,\n    required int row,\n    required int column,\n    int? seed\n  })\n</code></pre>"},{"location":"API/Dart/constructor/#example_8","title":"example","text":"<pre><code>import 'dart:math';\n\nimport 'package:flutter/material.dart';\nimport 'package:fl_chart/fl_chart.dart';\nimport 'matply.dart';\n\nvoid main() {\n  runApp(const MyApp());\n}\n\nclass MyApp extends StatelessWidget {\n  const MyApp({super.key});\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      title: 'Flutter Demo',\n      theme: ThemeData(\n        colorScheme: ColorScheme.fromSeed(seedColor: Colors.deepPurple),\n        useMaterial3: true,\n      ),\n      home: const MyHomePage(),\n    );\n  }\n}\n\nclass MyHomePage extends StatefulWidget {\n  const MyHomePage({super.key});\n  @override\n  State&lt;MyHomePage&gt; createState() =&gt; _MyHomePageState();\n}\n\nvar mt = MatrixType.poisson(lambda: 5.5, row: 1, column: 1000);\nList&lt;int&gt; ps = (mt[0] as List&lt;double&gt;).map((double value) =&gt; value.toInt()).toList();\n\nclass _MyHomePageState extends State&lt;MyHomePage&gt; {\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(\n        backgroundColor: Theme.of(context).colorScheme.inversePrimary,\n      ),\n      body: Center(\n        child: Padding(\n          padding: const EdgeInsets.all(16.0),\n          child: _buildHistogram(),\n        ),\n      ),\n    );\n  }\n\n  Widget _buildHistogram() {\n    const binCount = 10;\n    final int minPs = (mt.min(dim: -1) as double).toInt();\n    final int maxPs = (mt.max(dim: -1) as double).toInt();\n    final binSize = (maxPs - minPs) / binCount;\n    final bins = List.generate(binCount, (_) =&gt; 0);\n\n    for (var value in ps) {\n      final bin = ((value - minPs) / binSize).floor();\n      if (bin &gt;= 0 &amp;&amp; bin &lt; bins.length) {\n        bins[bin]++;\n      }\n    }\n\n    final barGroups = List.generate(bins.length, (i) {\n      return BarChartGroupData(\n        x: i,\n        barRods: [\n          BarChartRodData(\n            width: 16, toY: bins[i].toDouble(),\n          ),\n        ],\n      );\n    });\n\n    return BarChart(\n      BarChartData(\n        alignment: BarChartAlignment.spaceAround,\n        titlesData: const FlTitlesData(\n          show: true,\n        ),\n        borderData: FlBorderData(show: false),\n        barGroups: barGroups,\n      ),\n    );\n  }\n}\n</code></pre>"},{"location":"API/Dart/constructor/#_8","title":"\u6548\u679c\u5982\u4e0b","text":""},{"location":"API/Dart/constructor/#c","title":"\u6307\u5411C\u8bed\u8a00\u751f\u6210\u77e9\u9635\u5bf9\u8c61\u6307\u9488","text":"<pre><code>MatrixType.fromPointer(this.self, this.shape)\n</code></pre> <p>\u6ce8: V1.0.8\u5f00\u59cb\uff0cfromPointer\u4ece__fromPointer\u8bbe\u7f6e\u4e3a\u516c\u6709\u65b9\u6cd5</p>"},{"location":"API/Dart/constructor/#_9","title":"\u5de5\u5382\u6784\u9020\u2014\u2014\u6df1\u62f7\u8d1d\u77e9\u9635","text":"<pre><code>factory MatrixType.deepCopy(MatrixType other)\n</code></pre>"},{"location":"API/Dart/constructor/#example_9","title":"example","text":"<pre><code>main() {\n\n  var m1 = MatrixType.E(n: 5);\n  var m2 = MatrixType.deepCopy(m1);\n  print(identityHashCode(m1));\n  print(identityHashCode(m2));\n  print(identical(m1, m2));\n}\n\n/* outputs\n21077322\n717773056\nfalse\n */\n</code></pre>"},{"location":"API/Dart/constructor/#10","title":"\u751f\u6210\u6700\u5c0f\u7ef4\u5ea6\u4e0b\u5bf9\u89d2\u7ebf\u4e0a\u5168\u662f1\uff0c\u5176\u4ed6\u5168\u662f0\u7684\u4eff\u5355\u4f4d\u77e9\u9635","text":"<pre><code>MatrixType.E_like({required int row, required int column})\n</code></pre>"},{"location":"API/Dart/constructor/#example_10","title":"example","text":"<pre><code>import 'matply.dart';\n\nmain(){\n  MatrixType mt = MatrixType.E_like(row: 3, column: 5);\n  mt.visible();\n}\n\n/*output\n[\n [1.00000    0.00000     0.00000     0.00000     0.00000    ]\n [0.00000    1.00000     0.00000     0.00000     0.00000    ]\n [0.00000    0.00000     1.00000     0.00000     0.00000    ]\n]\n* */\n</code></pre>"},{"location":"API/Dart/constructor/#start","title":"\u6307\u5b9a\u6b65\u957f\u540e\uff0c\u4ecestart\u5f00\u59cb\u751f\u6210\u6570\u636e","text":"<pre><code>MatrixType.range({\n    required double start,\n    double step = 1.0,\n    required int row,\n    required int column\n  })\n</code></pre>"},{"location":"API/Dart/constructor/#example_11","title":"example","text":"<pre><code>import 'matply.dart';\n\nmain(){\n  MatrixType mt = MatrixType.range(row: 3, column: 5, start: 2.5, step: 0.5);\n  mt.visible();\n}\n\n/*output\n[\n [2.50000    3.00000     3.50000     4.00000     4.50000    ]\n [5.00000    5.50000     6.00000     6.50000     7.00000    ]\n [7.50000    8.00000     8.50000     9.00000     9.50000    ]\n]\n* */\n</code></pre>"},{"location":"API/Dart/constructor/#subtrue","title":"\u83b7\u53d6\u5bf9\u79f0\u5bf9\u89d2\u9635\uff0c\u8bbe\u7f6esub\u4e3atrue\u5f97\u5230\u526f\u5bf9\u89d2\u7ebf\u5bf9\u79f0\u9635","text":"<pre><code> MatrixType.Diag({\n    required int n,\n    required double start,\n    required double end,\n    bool sub = false,\n    int? seed\n  })\n</code></pre>"},{"location":"API/Dart/constructor/#example_12","title":"example","text":"<pre><code>import 'core.dart';\n\nmain(){\n  MatrixType.Diag(n: 5, start: 1, end: 5, seed: 1)..visible();\n  MatrixType.Diag(n: 5, start: 1, end: 5, seed: 2, sub: true)..visible();\n}\n\n/*\noutput\n[\n [1.00501    3.25434     1.77322     4.23496     3.34004    ]\n [3.25434    2.91949     2.40117     4.58385     4.29136    ]\n [1.77322    2.40117     3.98642     1.69643     4.43577    ]\n [4.23496    4.58385     1.69643     3.84201     3.05414    ]\n [3.34004    4.29136     4.43577     3.05414     2.21598    ]\n]\n[\n [2.81829    4.53539     4.92505     3.23591     4.59923    ]\n [1.87490    1.81277     1.07398     2.30680     3.23591    ]\n [3.30927    4.70702     2.54448     1.07398     4.92505    ]\n [4.67260    4.63939     4.70702     1.81277     4.53539    ]\n [2.34758    4.67260     3.30927     1.87490     2.81829    ]\n]\n\n* */\n</code></pre>"},{"location":"API/Dart/constructor/#_10","title":"\u6307\u6570\u5206\u5e03","text":"<pre><code>MatrixType.exponential({\n    required int row,\n    required int column,\n    required double scale,\n    int? seed\n  })\n</code></pre>"},{"location":"API/Dart/constructor/#example_13","title":"example","text":"<pre><code>import 'core.dart';\n\nmain(){\n  initMp();\n  set_visible_round('%.1f');\n  MatrixType.exponential(row: 3, column: 6, scale: 0.5).visible();\n  freeMp(visible: true, hex: false);\n}\n\n/*output\n[\n [2.8 3.7 0.3 6.2 2.6 0.5]\n [1.5 0.6 2.7 6.0 1.8 0.7]\n [1.5 1.9 3.8 1.3 4.0 3.8]\n]\nFree Memory in location : 3044701056\n */\n</code></pre>"},{"location":"API/Dart/constructor/#_11","title":"\u4f3d\u9a6c\u5206\u5e03","text":"<pre><code> MatrixType.gamma({\n    required int row,\n    required int column,\n    required double shape,\n    required double scale,\n    int? seed\n  })\n</code></pre>"},{"location":"API/Dart/constructor/#example_14","title":"example","text":"<pre><code>import 'core.dart';\n\nmain(){\n  initMp();\n  set_visible_round('%.5f');\n  MatrixType.gamma(row: 3, column: 6, scale: 0.5, shape: 1.0).visible();\n  freeMp(visible: true, hex: true);\n}\n\n/*output\n[\n [1.58136 0.08194 2.77598 0.34273 1.37208 0.56165]\n [2.88074 0.04974 0.32192 0.02766 1.67183 1.73036]\n [1.31752 0.84275 1.17293 2.81444 0.38546 0.50470]\n]\nFree Memory in location : 000001efb2bb7380\n */\n</code></pre>"},{"location":"API/Dart/constructor/#_12","title":"\u4e8c\u9879\u5206\u5e03\uff08\u4f2f\u52aa\u5229\u5206\u5e03\uff09","text":"<pre><code>MatrixType.binomial({\n    required int row,\n    required int column,\n    required int n,\n    required double p,\n    int? seed\n  })\n</code></pre>"},{"location":"API/Dart/constructor/#example_15","title":"example","text":"<pre><code>import 'core.dart';\n\nmain(){\n  initMp();\n  set_visible_round('%.5f');\n  MatrixType.binomial(row: 2, column: 6, p: 0.5, n: 10).visible();\n  freeMp(visible: true, hex: true);\n}\n\n/*output\n[\n [4.00000 3.00000 3.00000 4.00000 3.00000 5.00000]\n [3.00000 5.00000 6.00000 7.00000 2.00000 9.00000]\n]\nFree Memory in location : 000002069dfb7300\n */\n</code></pre>"},{"location":"API/Dart/constructor/#_13","title":"\u5361\u65b9\u5206\u5e03","text":"<pre><code>MatrixType.chisquare({\n    required int row,\n    required int column,\n    required int k,\n    int? seed\n  })\n</code></pre>"},{"location":"API/Dart/constructor/#example_16","title":"example","text":"<pre><code>import 'core.dart';\n\nmain(){\n  initMp();\n  set_visible_round('%.5f');\n  MatrixType.chisquare(row: 2, column: 10, k: 10).visible();\n  freeMp(visible: true, hex: true);\n}\n\n/*output\n[\n [15.56649 6.49801 15.22481 19.63363 13.40057 7.41420 6.87870 8.56945 10.14679 12.19465]\n [10.69842 12.52793 13.45222 16.02619 2.52850 14.73268 1.99553 14.03686 23.45220 13.17031]\n]\nFree Memory in location : 00000224f20d7380\n */import 'core.dart';\n\nmain(){\n  initMp();\n  set_visible_round('%.5f');\n  MatrixType.chisquare(row: 2, column: 10, k: 10).visible();\n  freeMp(visible: true, hex: true);\n}\n\n/*output\n[\n [15.56649 6.49801 15.22481 19.63363 13.40057 7.41420 6.87870 8.56945 10.14679 12.19465]\n [10.69842 12.52793 13.45222 16.02619 2.52850 14.73268 1.99553 14.03686 23.45220 13.17031]\n]\nFree Memory in location : 00000224f20d7380\n */\n</code></pre>"},{"location":"API/Dart/constructor/#t","title":"t\u5206\u5e03","text":"<pre><code>MatrixType.tdis({\n    required int row,\n    required int column,\n    required int k,\n    int? seed\n  })\n</code></pre>"},{"location":"API/Dart/constructor/#example_17","title":"example","text":"<pre><code>import 'core.dart';\n\nmain(){\n  initMp();\n  set_visible_round('%.5f');\n  MatrixType.tdis(row: 2, column: 10, k: 10).visible();\n  freeMp(visible: true, hex: true);\n}\n\n/*output\n[\n [-1.55972 0.00143 0.06831 -0.95161 0.57509 0.04076 -0.85714 -1.25147 -0.10346 -1.21439]\n [-0.54939 0.15324 -1.64424 1.77921 0.30666 -2.25429 0.64608 -0.13936 -0.80505 0.06822]\n]\nFree Memory in location : 000002ad7b887380\n */\n</code></pre>"},{"location":"API/Dart/constructor/#f","title":"F\u5206\u5e03","text":"<pre><code>MatrixType.fdis({\n    required int row,\n    required int column,\n    required int k1,\n    required int k2,\n    int? seed\n  })\n</code></pre>"},{"location":"API/Dart/constructor/#example_18","title":"example","text":"<pre><code>import 'core.dart';\n\nmain(){\n  initMp();\n  set_visible_round('%.5f');\n  MatrixType.fdis(row: 2, column: 10, k1: 10, k2: 10).visible();\n  freeMp(visible: true, hex: true);\n}\n\n/*output\n[\n [0.61269 0.50923 1.19459 1.13693 1.06316 3.46132 2.35123 0.70744 3.02284 3.84514]\n [0.57377 0.21793 1.49196 0.55962 1.06172 1.16347 1.17703 0.85898 1.48983 0.73666]\n]\nFree Memory in location : 000002c26e167380\n */\n</code></pre>"},{"location":"API/Dart/constructor/#_14","title":"\u51e0\u4f55\u5206\u5e03","text":"<pre><code>MatrixType.geometric({\n    required int row,\n    required int column,\n    required double p,\n    int? seed\n  })\n</code></pre>"},{"location":"API/Dart/constructor/#example_19","title":"example","text":"<pre><code>import 'core.dart';\n\nmain(){\n  initMp();\n  set_visible_round('%.5f');\n  MatrixType.geometric(row: 2, column: 10, p: .25).visible();\n  freeMp(visible: true, hex: true);\n}\n\n/*output\n[\n [12.00000 0.00000 0.00000 3.00000 0.00000 3.00000 1.00000 0.00000 2.00000 6.00000]\n [1.00000 3.00000 4.00000 7.00000 0.00000 1.00000 0.00000 8.00000 0.00000 2.00000]\n]\nFree Memory in location : 000001e2e1977380\n */\n</code></pre>"},{"location":"API/Dart/constructor/#_15","title":"\u8d1f\u4e8c\u9879\u5206\u5e03","text":"<pre><code>MatrixType.nbinomial({\n    required int row,\n    required int column,\n    required int n,\n    required double p,\n    int? seed\n  }) \n</code></pre>"},{"location":"API/Dart/constructor/#example_20","title":"example","text":"<pre><code>import 'core.dart';\n\nmain(){\n  initMp();\n  set_visible_round('%.5f');\n  MatrixType.nbinomial(row: 2, column: 10, p: .5, n: 10).visible();\n  freeMp(visible: true, hex: true);\n}\n\n/*output\n[\n [8.00000 4.00000 10.00000 11.00000 10.00000 4.00000 14.00000 10.00000 16.00000 17.00000]\n [10.00000 11.00000 10.00000 8.00000 21.00000 11.00000 16.00000 9.00000 14.00000 9.00000]\n]\nFree Memory in location : 0000023d8ca17380\n */\n</code></pre>"},{"location":"API/Dart/constructor/#_16","title":"\u5bf9\u6570\u6b63\u6001\u5206\u5e03","text":"<pre><code>MatrixType.lognormal({\n    required int row,\n    required int column,\n    required double mu,\n    required double sigma,\n    int? seed\n  })\n</code></pre>"},{"location":"API/Dart/constructor/#example_21","title":"example","text":"<pre><code>import 'core.dart';\n\nmain(){\n  initMp();\n  set_visible_round('%.5f');\n  MatrixType.lognormal(row: 2, column: 10, mu: 0.5, sigma: 0).visible();\n  MatrixType.lognormal(row: 2, column: 10, mu: 0.5, sigma: 0.5).visible();\n  freeMp(visible: true, hex: true);\n}\n\n/*output\n[\n [1.64872 1.64872 1.64872 1.64872 1.64872 1.64872 1.64872 1.64872 1.64872 1.64872]\n [1.64872 1.64872 1.64872 1.64872 1.64872 1.64872 1.64872 1.64872 1.64872 1.64872]\n]\n[\n [3.81646 2.29163 1.33575 2.29506 1.17002 1.19118 1.22871 2.71503 2.29982 2.71270]\n [1.25637 1.75886 2.28643 1.04136 0.98519 0.86194 2.23628 1.92314 1.92319 1.46729]\n]\nFree Memory in location : 0000014647557380\nFree Memory in location : 00000146475573a0\n */\n</code></pre>"},{"location":"API/Dart/constructor/#_17","title":"\u67ef\u897f\u5206\u5e03","text":"<pre><code>MatrixType.cauchydis({\n    required int row,\n    required int column,\n    required double base,\n    required double gamma,\n    int? seed\n  })\n</code></pre>"},{"location":"API/Dart/constructor/#example_22","title":"example","text":"<pre><code>import 'core.dart';\n\nmain(){\n  initMp();\n  set_visible_round('%.5f');\n  MatrixType.cauchydis(row: 2, column: 10, base: 1, gamma: 0.5).visible();\n  freeMp(visible: true, hex: true);\n}\n\n/*output\n[\n [0.37542 0.98209 2.42007 0.57578 -3.74944 0.93080 0.72307 -4.37754 -1.45691 1.58629]\n [0.63870 3.46659 0.68280 -8.66677 1.43988 1.24878 1.85410 1.25154 -2.21948 2.62520]\n]\nFree Memory in location : 000001e62cd87380\n */\n</code></pre>"},{"location":"API/Dart/constructor/#_18","title":"\u591a\u9879\u5f0f\u5206\u5e03","text":"<pre><code>MatrixType.multinomial({\n    required List&lt;double&gt; p,\n    required int n,\n    required int size,\n    int? seed\n  })\n</code></pre>"},{"location":"API/Dart/constructor/#example_23","title":"example","text":"<pre><code>import 'core.dart';\n\nmain(){\n  initMp();\n  set_visible_round('%.0f');\n  MatrixType.multinomial(p: [0.3, 0.2, 0.3, 0.05, 0.15], n: 10, size: 3).visible();\n  freeMp(visible: true, hex: true);\n}\n\n/*output\n[\n [2 3 4 1 0]\n [5 1 2 0 2]\n [2 0 8 0 0]\n]\nFree Memory in location : 00000276fd067320\n */\n</code></pre>"},{"location":"API/Dart/constructor/#_19","title":"\u8d1d\u5854\u5206\u5e03","text":"<pre><code>MatrixType.beta({\n    required int row,\n    required int column,\n    required double a,\n    required double b,\n    int? seed\n  }):\n</code></pre>"},{"location":"API/Dart/constructor/#example_24","title":"example","text":"<pre><code>import 'core.dart';\n\nmain(){\n  initMp();\n  set_visible_round('%.2f');\n  MatrixType.beta(row: 2, column: 6, a: .5, b: .5).visible();\n  freeMp(visible: true, hex: true);\n}\n\n/*output\n[\n [0.27 0.91 0.69 0.55 0.41 0.96]\n [0.89 0.23 0.90 0.17 0.60 0.75]\n]\nFree Memory in location : 000001dd73d47300\n */\n</code></pre>"},{"location":"API/Dart/constructor/#_20","title":"\u7ef4\u7eb3\u8fc7\u7a0b","text":"<pre><code>MatrixType.wiener_process({\n    required int row,\n    required int column,\n    required double t,\n    int? seed\n  })\n</code></pre>"},{"location":"API/Dart/constructor/#example_25","title":"example","text":"<pre><code>import 'core.dart';\n\nmain(){\n  initMp();\n  set_visible_round('%.6f');\n  MatrixType.wiener_process(row: 1, column:10, t: 6.0).visible();\n  MatrixType.wiener_process(row: 1, column:10, t: .6).visible();\n  freeMp(visible: true, hex: true);\n}\n\n/*output\n[\n [0.000000 -0.494991 -1.613652 -1.003171 -0.746069 1.047979 1.297541 1.423661 1.165988 1.294647]\n]\n[\n [0.000000 -0.156530 -0.510282 -0.317230 -0.235928 0.331400 0.410318 0.450201 0.368718 0.409403]\n]\nFree Memory in location : 0000028f4ab81d80\nFree Memory in location : 0000028f4ab81da0\n */\n</code></pre>"},{"location":"API/Dart/constructor/#_21","title":"\u7ef4\u7eb3\u8fc7\u7a0b\u67d0\u65f6\u95f4\u6233","text":"<pre><code>MatrixType.wiener_process_stage({\n    required int row,\n    required int column,\n    required double t1,\n    required double t2,\n    required double base,\n    int? seed\n  })\n</code></pre>"},{"location":"API/Dart/constructor/#example_26","title":"example","text":"<pre><code>import 'core.dart';\n\nmain(){\n  initMp();\n  set_visible_round('%.6f');\n  MatrixType.wiener_process_stage(row: 2, column:8, t1: 6.0, t2: 11.0, base: 1.14).visible();\n  freeMp(visible: true, hex: true);\n}\n\n/*output\n[\n [1.140000 0.632525 0.594452 -0.243608 0.212239 0.289958 0.430776 -0.225537]\n [1.140000 0.859476 0.931509 1.334139 2.012373 2.806146 3.353208 3.149699]\n]\nFree Memory in location : 000001e34b087350\n */\n</code></pre>"},{"location":"API/Dart/constructor/#_22","title":"\u72c4\u5229\u514b\u96f7\u5206\u5e03","text":"<pre><code>MatrixType.dirichlet({\n    required List&lt;num&gt; alpha,\n    required int size,\n    int? seed\n  })\n</code></pre>"},{"location":"API/Dart/constructor/#example_27","title":"example","text":"<pre><code>import 'core.dart';\n\nmain(){\n  initMp();\n  set_visible_round('%.6f');\n  MatrixType.dirichlet(alpha: [0.2, 0.6, 0.4, 0.2, 0.15], size: 3).visible();\n  freeMp(visible: true, hex: true);\n}\n\n/*output\n[\n [0.005214 0.336047 0.320509 0.060260 0.277970]\n [0.013985 0.527971 0.016174 0.004724 0.437147]\n [0.000005 0.930178 0.027854 0.028430 0.013533]\n]\nFree Memory in location : 0000019b3a2f7040\n */\n</code></pre>"},{"location":"API/Dart/constructor/#_23","title":"\u62c9\u666e\u62c9\u65af\u5206\u5e03","text":"<pre><code>MatrixType.laplacedis({\n    required int row,\n    required int column,\n    required double mu,\n    required double b,\n    int? seed\n  })\n</code></pre>"},{"location":"API/Dart/constructor/#example_28","title":"example","text":"<pre><code>import 'core.dart';\n\nmain(){\n  initMp();\n  set_visible_round('%.6f');\n  MatrixType.laplacedis(row: 2, column: 6, mu: 0.5, b: 1.0).visible();\n  freeMp(visible: true, hex: true);\n}\n\n/*output\n[\n [0.774634 0.382278 1.694869 0.325200 0.745268 -1.411681]\n [1.796428 0.719701 0.746751 1.678075 -1.453415 1.818313]\n]\nFree Memory in location : 0000023bc58b7300\n */\n</code></pre>"},{"location":"API/Dart/constructor/#_24","title":"\u803f\u8d1d\u5c14\u5206\u5e03","text":"<pre><code>MatrixType.gumbel({\n    required int row,\n    required int column,\n    required double mu,\n    required double beta,\n    bool left = true,\n    int? seed\n  })\n</code></pre>"},{"location":"API/Dart/constructor/#example_29","title":"example","text":"<pre><code>import 'core.dart';\n\nmain(){\n  initMp();\n  set_visible_round('%.6f');\n  MatrixType.gumbel(row: 1, column: 10, mu: 0.5, beta: 1).visible();\n  freeMp(visible: true, hex: true);\n}\n\n/*output\n[\n [-0.271253 0.792400 -0.657043 -0.349956 1.168808 -0.522410 1.442951 -2.173026 0.170748 -0.329818]\n]\nFree Memory in location : 0000021ce0bd1d80\n */\n</code></pre>"},{"location":"API/Dart/constructor/#_25","title":"\u8d85\u51e0\u4f55\u5206\u5e03","text":"<pre><code>MatrixType.hypergeometric({\n    required int row,\n    required int column,\n    required int expected,\n    required int unexpected,\n    required int n,\n    int? seed\n  }) \n</code></pre>"},{"location":"API/Dart/constructor/#example_30","title":"example","text":"<pre><code>import 'core.dart';\n\nmain(){\n  initMp();\n  set_visible_round('%.0f');\n  MatrixType.hypergeometric(row: 2, column: 6, expected: 5, unexpected: 12, n: 10).visible();\n  freeMp(visible: true, hex: true);\n}\n\n/*output\n[\n [3 2 4 2 3 2]\n [2 4 2 1 2 5]\n]\nFree Memory in location : 000001d91f5c7300\n */\n</code></pre>"},{"location":"API/Dart/constructor/#_26","title":"\u5bf9\u6570\u7ea7\u6570\u5206\u5e03","text":"<pre><code>MatrixType.logseries({\n    required int row,\n    required int column,\n    required double p,\n    int? seed\n  })\n</code></pre>"},{"location":"API/Dart/constructor/#example_31","title":"example","text":"<pre><code>import 'core.dart';\n\nmain(){\n  initMp();\n  set_visible_round('%.2f');\n  MatrixType.logseries(row: 2, column: 6, p: 0.5).visible();\n  freeMp(visible: true, hex: true);\n}\n\n/*output\n[\n [0.33 0.25 0.28 0.80 0.28 0.54]\n [0.49 0.40 0.57 0.44 0.38 0.28]\n]\nFree Memory in location : 00000188144a7300\n */\n</code></pre>"},{"location":"API/Dart/constructor/#_27","title":"\u97e6\u4f2f\u5206\u5e03","text":"<pre><code>MatrixType.weibull({\n    required int row,\n    required int column,\n    required double lambda,\n    required double k,\n    int? seed\n}) \n</code></pre>"},{"location":"API/Dart/constructor/#example_32","title":"example","text":"<pre><code>import 'core.dart';\n\nmain(){\n  initMp();\n  set_visible_round('%.2f');\n  MatrixType.weibull(row: 2, column: 4, lambda: 1.0, k: 1.5).visible();\n  freeMp(visible: true, hex: true);\n}\n\n/*output\n[\n [0.25 1.78 0.19 1.44]\n [1.02 0.12 1.26 1.67]\n]\nFree Memory in location : 000001bf5b3a1d80\n */\n</code></pre>"},{"location":"API/Dart/constructor/#_28","title":"\u4e09\u89d2\u5206\u5e03","text":"<pre><code>MatrixType.triangular({\n    required int row,\n    required int column,\n    required double left,\n    required double middle,\n    required double right,\n    int? seed\n  })\n</code></pre>"},{"location":"API/Dart/constructor/#example_33","title":"example","text":"<pre><code>import 'core.dart';\n\nmain(){\n  initMp();\n  set_visible_round('%.5f');\n  MatrixType.triangular(row: 2, column: 7, left: 1.0, middle: 2.0, right: 3.0).visible();\n  freeMp(visible: true, hex: true);\n}\n\n/*output\n[\n [2.56347 1.71591 2.46651 2.27200 2.11517 1.80078 1.52699]\n [1.96187 2.26499 2.86997 1.59944 2.23217 1.81338 2.62818]\n]\nFree Memory in location : 000001ca14a87300\n */\n</code></pre>"},{"location":"API/Dart/constructor/#_29","title":"\u5e42\u5b9a\u5f8b\u5206\u5e03","text":"<pre><code>MatrixType.power_law({\n    required int row,\n    required int column,\n    required double xmin,\n    required double alpha,\n    int? seed\n  })\n</code></pre>"},{"location":"API/Dart/constructor/#example_34","title":"example","text":"<pre><code>import 'core.dart';\n\nmain(){\n  initMp();\n  set_visible_round('%.5f');\n  MatrixType.power_law(row: 2, column: 7, xmin: 2, alpha: 11.1).visible();\n  freeMp(visible: true, hex: true);\n}\n\n/*output\n[\n [2.24022 2.20870 2.94802 2.87119 2.13304 2.05349 2.13515]\n [2.26827 2.71454 2.05313 2.14800 2.20670 2.94668 2.19404]\n]\nFree Memory in location : 000002bf4a287300\n */\n</code></pre>"},{"location":"API/Dart/constructor/#_30","title":"\u745e\u5229\u5206\u5e03","text":"<pre><code>MatrixType.rayleigh({\n    required int row,\n    required int column,\n    required double sigma,\n    int? seed\n  })\n</code></pre>"},{"location":"API/Dart/constructor/#example_35","title":"example","text":"<pre><code>import 'core.dart';\n\nmain(){\n  initMp();\n  set_visible_round('%.5f');\n  MatrixType.rayleigh(row: 2, column: 6, sigma: 1).visible();\n  freeMp(visible: true, hex: true);\n}\n\n/*output\n[\n [1.53414 1.73643 1.02215 2.37727 0.88869 2.75930]\n [1.77184 2.58797 0.90467 1.93270 0.38486 1.69292]\n]\nFree Memory in location : 000002246e4b7300\n */\n</code></pre>"},{"location":"API/Dart/constructor/#_31","title":"\u7a33\u5b9a\u5206\u5e03","text":"<pre><code>MatrixType.stabledis({\n    required int row,\n    required int column,\n    required double alpha,\n    required double beta,\n    required double gamma,\n    required double delta,\n    int? seed\n  }) \n</code></pre>"},{"location":"API/Dart/constructor/#example_36","title":"example","text":"<pre><code>import 'core.dart';\n\nmain(){\n  initMp();\n  set_visible_round('%.5f');\n  MatrixType.stabledis(row: 2, column: 8, alpha: pi / 2, beta: 0.05, gamma: 1.5, delta: 2).visible();\n  freeMp(visible: true, hex: true);\n}\n\n/*output\n[\n [2.81285 0.94737 -0.84381 2.21197 -0.03858 5.08785 4.30831 3.10489]\n [-0.49566 4.02022 11.08963 1.96012 -0.43667 1.42398 0.89637 3.43363]\n]\nFree Memory in location : 0000029729597350\n */\n</code></pre>"},{"location":"API/Dart/constructor/#_32","title":"\u5e15\u7d2f\u6258\u5206\u5e03","text":"<pre><code>MatrixType.pareto({\n    required int row,\n    required int column,\n    required double xmin,\n    required double alpha,\n    int? seed\n  })\n</code></pre>"},{"location":"API/Dart/constructor/#example_37","title":"example","text":"<pre><code>import 'core.dart';\n\nmain(){\n  initMp();\n  set_visible_round('%.5f');\n  MatrixType.pareto(row: 2, column: 6, xmin: 2, alpha: 0.5).visible();\n  freeMp(visible: true, hex: true);\n}\n\n/*output\n[\n [30.98381 3.27788 5035.89882 6.14139 10.53488 2.88652]\n [6.94651 4.99984 6.71013 40.57302 13.55804 7.76927]\n]\nFree Memory in location : 00000142854c7300\n */\n</code></pre>"},{"location":"API/Dart/constructor/#_33","title":"\u6784\u9020\u51fd\u6570","text":"<pre><code>MatrixType.rice({\n    required int row,\n    required int column,\n    required double v,\n    required double sigma,\n    int? seed\n  })\n</code></pre>"},{"location":"API/Dart/constructor/#example_38","title":"\u83b1\u65af\u5206\u5e03example","text":"<pre><code>import 'core.dart';\n\nmain(){\n  initMp();\n  set_visible_round('%.5f');\n  MatrixType.rice(row: 2, column: 9, v: .5, sigma: .5).visible();\n  freeMp(visible: true, hex: true);\n}\n\n/*output\n[\n [0.60613 1.51139 1.32982 0.76693 0.49445 1.00509 1.39435 1.57219 1.10378]\n [1.11027 0.52717 0.35058 0.16057 0.28000 0.75422 1.58283 0.97214 0.86201]\n]\nFree Memory in location : 0000022585957350\n */\n</code></pre>"},{"location":"API/Dart/constructor/#_34","title":"\u9006\u9ad8\u65af\u5206\u5e03","text":"<pre><code>MatrixType.wald({\n    required int row,\n    required int column,\n    required double mu,\n    required double sigma,\n    int? seed\n  })\n</code></pre>"},{"location":"API/Dart/constructor/#example_39","title":"example","text":"<pre><code>import 'core.dart';\n\nmain(){\n  initMp();\n  set_visible_round('%.5f');\n  MatrixType.wald(row: 2, column: 9, mu: .5, sigma: .5).visible();\n  freeMp(visible: true, hex: true);\n}\n\n/*output\n[\n [0.25622 0.28209 0.25044 0.43373 0.29696 0.69026 0.59955 0.26258 0.29329]\n [1.25087 1.57323 0.30614 0.44101 0.25149 0.30327 0.29911 0.98868 2.15261]\n]\nFree Memory in location : 000002f0d1f97350\n */\n</code></pre> <p>\u4e0b\u4e00\u7bc7\uff1a\u91cd\u8f7d\u64cd\u4f5c\u7b26</p>"},{"location":"API/Dart/extension_csv/","title":"CSV\u8bfb\u53d6\u5668","text":""},{"location":"API/Dart/extension_csv/#properties","title":"properties","text":"<pre><code>late final String path;  \u6587\u4ef6\u8def\u5f84\nList&lt;String&gt;? rowLabels;  \u884c\u6807\u7b7e\nList&lt;String&gt;? colLabels;  \u5217\u6807\u7b7e\nList&lt;int&gt;? shape;  \u5f62\u72b6\uff08\u5305\u542b\u884c\u6807\u7b7e\uff09\nList&lt;List&lt;String&gt;&gt;? content;  \u521d\u59cb\u8bfb\u53d6\u7684\u5b57\u7b26\u4e32\u6570\u636e\nList&lt;List&lt;double&gt;&gt;? data;  \u8f6c\u6362\u5b57\u7b26\u4e32\u6570\u636e\u5230\u6570\u5b57\u578b\u6570\u636e\n</code></pre>"},{"location":"API/Dart/extension_csv/#methods","title":"methods","text":"<pre><code>CSVReader(this.path)\n\u5728\u6784\u9020\u65f6\u4f20\u5165\u6587\u4ef6\u8def\u5f84\u4e14\u5fc5\u987b\u4fdd\u8bc1\u6587\u4ef6\u8def\u5f84\u5b58\u5728\n</code></pre> <pre><code>Future&lt;void&gt; read_csv_async({\n    bool first_col_is_labels = true,\n    String loss_column_label = \"Unnamed\",\n    Encoding encoding = utf8\n}) \n\nvoid read_csv_sync({\n    bool first_col_is_labels = true,\n    String loss_column_label = \"Unnamed\",\n    Encoding encoding = utf8\n}) \n\u5f02/\u540c\u6b65\u8bfb\u53d6\u65b9\u6cd5\u3002\u4e09\u4e2a\u53c2\u6570\u5206\u522b\u662f\u7b2c\u4e00\u5217\u662f\u5426\u662f\u5217\u6807\u7b7e\u3001\u5728\u7b2c\u4e00\u5217\u4e0d\u662f\u6807\u7b7e\u7684\u60c5\u51b5\u4e0b\u66ff\u6362\u65b9\u6848\u3001\u8bfb\u53d6\u65f6\u7f16\u7801\u683c\u5f0f\u3002  \n\u53ea\u6709\u8c03\u7528\u4e86read_csv_async\u6216\u8005read_csv_sync\u624d\u80fd\u5199\u5165\u5230rowLabels\u3001colLabels\u3001shape\u4ee5\u53cacontent\n</code></pre> <pre><code>Future&lt;List&lt;List&lt;double&gt;&gt;&gt; convertToNumberAsync({double replace = double.nan})\n\nList&lt;List&lt;double&gt;&gt; convertToNumberSync({double replace = double.nan})\n\u5c06content\u5c5e\u6027\u8f6c\u6362\u751f\u6210data\u6570\u636e\u7684\u65b9\u6cd5\uff0c\u5f53\u6570\u636e\u4e0d\u662f\u6570\u5b57\u578b\u6570\u636e\uff0c\u53ef\u4ee5\u4f7f\u7528replace\u66ff\u6362\n</code></pre>"},{"location":"API/Dart/extension_csv/#matrixtype","title":"MatrixType\u62d3\u5c55","text":"<pre><code>static Future&lt;MatrixType&gt; read_csv_async(\n    String path, {\n    bool first_col_is_labels = true,\n    String loss_column_label = \"Unnamed\",\n    Encoding encoding = utf8,\n    double replace = double.nan\n})\nstatic MatrixType read_csv_sync(\n    String path, {\n    bool first_col_is_labels = true,\n    String loss_column_label = \"Unnamed\",\n    Encoding encoding = utf8,\n    double replace = double.nan\n})\n\u6ce8\u610f\uff1a\u751f\u6210\u7684MatrixType\u4fdd\u7559\u4e86\u7b2c\u4e00\u884c\u662f\u884c\u6807\u7b7e\u7684\u66ff\u6362\uff08\u4e00\u822c\u662fNaN\u3001NaN\u2026\u2026\uff09\u3002\n</code></pre>"},{"location":"API/Dart/extension_geometry/","title":"\u51e0\u4f55\u6570\u636e\u6a21\u62df\uff08GeometryGenerator\uff09","text":"<p>\u673a\u7406\uff1a GeometryGenerator\u7684\u6bcf\u4e2a\u7c7b\u90fd\u62e5\u6709\u4e00\u4e2abias\u53c2\u6570\uff0c\u9ed8\u8ba4\u662f0\uff0c \u8868\u660e\u83b7\u53d6\u7684\u662f\u76ee\u6807\u7684\u6e90\u6570\u636e\uff0c\u5f53bias\u4e0d\u4e3a0\u7684\u65f6\u5019\uff0c\u6570\u636e\u4f1a\u8fdb\u884c[-bias/2, bias/2]\u8303\u56f4\u5185\u7684\u504f\u79fb\uff08\u6216\u8005\u8bf4\u566a\u97f3\u5f71\u54cd\uff09</p>"},{"location":"API/Dart/extension_geometry/#_1","title":"\u692d\u5706\u8fb9\u7f18","text":"<pre><code>static MatrixType ellipse_edge({\n    int size = 50,\n    required double a,\n    required double b,\n    int? seed,\n    double bias\n  })\n</code></pre>"},{"location":"API/Dart/extension_geometry/#example","title":"example","text":"<pre><code>...\nfinal List&lt;List&lt;double&gt;&gt; ellipseEdgeDatas = GeometryGenerator.ellipse_edge(\n  a: 4.0, b: 3.0, size: 100\n).toList&lt;double&gt;() as List&lt;List&lt;double&gt;&gt;;\n...\nScatterChartData(\n    scatterSpots: List&lt;ScatterSpot&gt;.generate(100, (e) {\n      var [x, y] = ellipseEdgeDatas[e];\n      return ScatterSpot(x, y,);\n    })\n)\n...\n</code></pre> <p>\u6548\u679c </p>"},{"location":"API/Dart/extension_geometry/#_2","title":"\u692d\u5706\u533a\u57df","text":"<pre><code>static MatrixType ellipse_area({\n    int size = 50,\n    required double a,\n    required double b,\n    int? seed,\n    double bias\n  })\n</code></pre>"},{"location":"API/Dart/extension_geometry/#example_1","title":"example","text":"<pre><code>...\nfinal List&lt;List&lt;double&gt;&gt; ellipseAreaDatas = GeometryGenerator.ellipse_area(\n  a: 4.0, b: 3.0, size: 1500\n).toList&lt;double&gt;() as List&lt;List&lt;double&gt;&gt;;\n...\nScatterChartData(\n    scatterSpots: List&lt;ScatterSpot&gt;.generate(1500, (e) {\n      var [x, y] = ellipseAreaDatas[e];\n      return ScatterSpot(x, y,);\n    })\n),\n...\n</code></pre> <p>\u6548\u679c </p>"},{"location":"API/Dart/extension_geometry/#_3","title":"\u5706\u8fb9\u7f18","text":"<pre><code>static MatrixType circle_edge({\n    int size = 50,\n    required double r,\n    int? seed,\n    double bias\n  })\n</code></pre>"},{"location":"API/Dart/extension_geometry/#example_2","title":"example","text":"<pre><code>...\nfinal List&lt;List&lt;double&gt;&gt; circleEdgeDatas = GeometryGenerator.circle_edge(\n  r: 3.0, size: 100\n).toList&lt;double&gt;() as List&lt;List&lt;double&gt;&gt;;\n...\nbody: ScatterChart(\nScatterChartData(\n    scatterSpots: List&lt;ScatterSpot&gt;.generate(100, (e) {\n      var [x, y] = circleEdgeDatas[e];\n      return ScatterSpot(x, y,);\n    })\n),\n...\n</code></pre> <p>\u6548\u679c </p>"},{"location":"API/Dart/extension_geometry/#_4","title":"\u5706\u533a\u57df","text":"<pre><code>static MatrixType circle_area({\n    int size = 50,\n    required double r,\n    int? seed,\n    double bias\n  })\n</code></pre>"},{"location":"API/Dart/extension_geometry/#example_3","title":"example","text":"<pre><code>...\nfinal List&lt;List&lt;double&gt;&gt; datas = GeometryGenerator.circle_area(\n  r: 3.0, size: 1000\n).toList&lt;double&gt;() as List&lt;List&lt;double&gt;&gt;;\n...\nbody: ScatterChart(\nScatterChartData(\n    scatterSpots: List&lt;ScatterSpot&gt;.generate(1000, (e) {\n      var [x, y] = datas[e];\n      return ScatterSpot(x, y,);\n    })\n),\n...\n</code></pre> <p>\u6548\u679c </p>"},{"location":"API/Dart/extension_geometry/#_5","title":"\u7ebf\u6027\u6a21\u62df","text":"<pre><code>static MatrixType line({\n    int size = 50,\n    required math.Point&lt;double&gt; start,\n    required math.Point&lt;double&gt; end,\n    int? seed,\n    double bias\n}) \n</code></pre>"},{"location":"API/Dart/extension_geometry/#example_4","title":"example","text":"<pre><code>...\nfinal List&lt;List&lt;double&gt;&gt; datas = GeometryGenerator.line(\n  start: const math.Point(0.0, 0.0), end: const math.Point(5.0, 4.0), size: 100\n).toList&lt;double&gt;() as List&lt;List&lt;double&gt;&gt;;\n...\nbody: ScatterChart(\nScatterChartData(\n    scatterSpots: List&lt;ScatterSpot&gt;.generate(100, (e) {\n      var [x, y] = datas[e];\n      return ScatterSpot(x, y,);\n    })\n),\n),\n...\n</code></pre> <p>\u6548\u679c  </p> <p>\u6ce8\uff1a\u5982\u679c\u63d0\u4f9b\u4e00\u5143\u51fd\u6570\u7684\u7cfb\u6570\u6765\u8fdb\u884c\u6a21\u62df\uff0c\u53ef\u4ee5\u4f7f\u7528linewb\u6765\u6784\u9020</p>"},{"location":"API/Dart/extension_geometry/#_6","title":"\u4e09\u89d2\u5f62\u8f6e\u5ed3","text":"<pre><code>static MatrixType triangle_edge(\n      {int size = 50,\n      required math.Point&lt;double&gt; a,\n      required math.Point&lt;double&gt; b,\n      required math.Point&lt;double&gt; c,\n      int? seed,\n      double bias})\n</code></pre>"},{"location":"API/Dart/extension_geometry/#example_5","title":"example","text":"<pre><code>...\nfinal List&lt;List&lt;double&gt;&gt; datas = GeometryGenerator.triangle_edge(\n  a: const math.Point(0.0, 0.0),\n  b: const math.Point(3.0, 3.0),\n  c: const math.Point(4, -2),\n  size: 100\n).toList&lt;double&gt;() as List&lt;List&lt;double&gt;&gt;;\n...\nbody: ScatterChart(\nScatterChartData(\n    scatterSpots: List&lt;ScatterSpot&gt;.generate(100, (e) {\n      var [x, y] = datas[e];\n      return ScatterSpot(x, y,);\n    })\n),\n...\n</code></pre> <p>\u6548\u679c </p>"},{"location":"API/Dart/extension_geometry/#_7","title":"\u4e09\u89d2\u5f62\u533a\u57df","text":"<pre><code>static MatrixType triangle_area(\n      {int size = 50,\n      required math.Point&lt;double&gt; a,\n      required math.Point&lt;double&gt; b,\n      required math.Point&lt;double&gt; c,\n      int? seed,\n      double bias})\n</code></pre>"},{"location":"API/Dart/extension_geometry/#example_6","title":"example","text":"<pre><code>...\nfinal List&lt;List&lt;double&gt;&gt; datas = GeometryGenerator.triangle_area(\n  a: const math.Point(0.0, 0.0),\n  b: const math.Point(3.0, 3.0),\n  c: const math.Point(4, -2),\n  size: 1000\n).toList&lt;double&gt;() as List&lt;List&lt;double&gt;&gt;;\n...\nbody: ScatterChart(\nScatterChartData(\n    scatterSpots: List&lt;ScatterSpot&gt;.generate(1000, (e) {\n      var [x, y] = datas[e];\n      return ScatterSpot(x, y,);\n    })\n),\n...\n</code></pre> <p>\u6548\u679c </p>"},{"location":"API/Dart/extension_geometry/#_8","title":"\u56db\u8fb9\u5f62\u8f6e\u5ed3","text":"<pre><code>static MatrixType quadrilateral_edge(\n      {int size = 50,\n      required math.Point&lt;double&gt; a,\n      required math.Point&lt;double&gt; b,\n      required math.Point&lt;double&gt; c,\n      required math.Point&lt;double&gt; d,\n      int? seed,\n      double bias}) \n</code></pre> <p>\u6ce8\u610f\uff1a\u4ecea\u5230d\u662f\u6309\u7167\u987a\u5e8f\u8fde\u63a5\u7684</p>"},{"location":"API/Dart/extension_geometry/#example_7","title":"example","text":"<pre><code>...\nfinal List&lt;List&lt;double&gt;&gt; datas = GeometryGenerator.quadrilateral_edge(\n  a: const math.Point(0.0, 0.0),\n  b: const math.Point(5.0, 0.0),\n  c: const math.Point(5, 3),\n  d: const math.Point(0, 3),\n  size: 500\n).toList&lt;double&gt;() as List&lt;List&lt;double&gt;&gt;;\n...\nbody: ScatterChart(\nScatterChartData(\n    scatterSpots: List&lt;ScatterSpot&gt;.generate(500, (e) {\n      var [x, y] = datas[e];\n      return ScatterSpot(x, y,);\n    })\n),\n...\n</code></pre> <p>\u6548\u679c </p>"},{"location":"API/Dart/extension_geometry/#_9","title":"\u56db\u8fb9\u5f62\u533a\u57df","text":"<pre><code>static MatrixType quadrilateral_area(\n      {int size = 50,\n      required math.Point&lt;double&gt; a,\n      required math.Point&lt;double&gt; b,\n      required math.Point&lt;double&gt; c,\n      required math.Point&lt;double&gt; d,\n      int? seed,\n      double bias})\n</code></pre>"},{"location":"API/Dart/extension_geometry/#example_8","title":"example","text":"<pre><code>...\nfinal List&lt;List&lt;double&gt;&gt; datas = GeometryGenerator.quadrilateral_area(\n  a: const math.Point(0.0, 0.0),\n  b: const math.Point(1.5, 3),\n  c: const math.Point(4, 1),\n  d: const math.Point(2.5, -2),\n  size: 1500\n).toList&lt;double&gt;() as List&lt;List&lt;double&gt;&gt;;\n...\nbody: ScatterChart(\nScatterChartData(\n    scatterSpots: List&lt;ScatterSpot&gt;.generate(1500, (e) {\n      var [x, y] = datas[e];\n      return ScatterSpot(x, y,);\n    })\n),\n...\n</code></pre> <p>\u6548\u679c </p>"},{"location":"API/Dart/extension_geometry/#_10","title":"\u5fc3\u5f62\u7ebf\u8f6e\u5ed3","text":"<pre><code>static MatrixType heart_edge({\n    int size = 50,\n    double x_center = 0.0, \n    int? seed,\n    double bias\n})\n</code></pre>"},{"location":"API/Dart/extension_geometry/#example_9","title":"example","text":"<pre><code>...\nfinal List&lt;List&lt;double&gt;&gt; datas = GeometryGenerator.heart_edge(\n  x_center: 2.0,\n  size: 200\n).toList&lt;double&gt;() as List&lt;List&lt;double&gt;&gt;;\n...\nbody: ScatterChart(\nScatterChartData(\n    scatterSpots: List&lt;ScatterSpot&gt;.generate(200, (e) {\n      var [x, y] = datas[e];\n      return ScatterSpot(x, y,);\n    })\n),\n...\n</code></pre> <p>\u6548\u679c </p>"},{"location":"API/Dart/extension_geometry/#_11","title":"\u5fc3\u5f62\u533a\u57df","text":"<pre><code>static MatrixType heart_area({\n    int size = 50,\n    double x_center = 0.0,\n    int? seed,\n    double bias\n  })\n</code></pre>"},{"location":"API/Dart/extension_geometry/#example_10","title":"example","text":"<pre><code>...\nfinal List&lt;List&lt;double&gt;&gt; datas = GeometryGenerator.heart_area(\n  x_center: 2.0,\n  size: 1200\n).toList&lt;double&gt;() as List&lt;List&lt;double&gt;&gt;;\n...\nbody: ScatterChart(\nScatterChartData(\n    scatterSpots: List&lt;ScatterSpot&gt;.generate(1200, (e) {\n      var [x, y] = datas[e];\n      return ScatterSpot(x, y,);\n    })\n),\n...\n</code></pre> <p>\u6548\u679c </p>"},{"location":"API/Dart/extension_geometry/#_12","title":"\u66f2\u7ebf\u6a21\u62df","text":"<pre><code>static MatrixType curve(\n    double Function(double) func, {\n    int size = 50,\n    required double x1,\n    required double x2,\n    int? seed,\n    double bias\n  })\n</code></pre>"},{"location":"API/Dart/extension_geometry/#example_11","title":"example","text":"<pre><code>...\nfinal List&lt;List&lt;double&gt;&gt; datas = GeometryGenerator.curve(\n  (x) =&gt; math.sin(x) + math.cos(math.pow(x, 0.5)) + math.pow(x, .4),\n  x1: 1.0,\n  x2: 10.0,\n  size: 100\n).toList&lt;double&gt;() as List&lt;List&lt;double&gt;&gt;;\n...\nbody: ScatterChart(\nScatterChartData(\n    scatterSpots: List&lt;ScatterSpot&gt;.generate(100, (e) {\n      var [x, y] = datas[e];\n      return ScatterSpot(x, y,);\n    })\n),\n...\n</code></pre> <p>\u6548\u679c </p> <p>\u6ce8\uff1a\u5f53\u60f3\u8981\u9ad8\u5ea6\u5b9a\u4e49\u66f2\u7ebf\u65f6\uff0c\u6bd4\u5982\u751f\u6210\u87ba\u7ebf\u6570\u636e\u3001\u6446\u7ebf\u6570\u636e\u7b49\uff0c\u53ef\u4ee5\u4f7f\u7528custom_curve\u8fdb\u884c\u6784\u9020</p>"},{"location":"API/Dart/extension_geometry/#_13","title":"\u8d1d\u585e\u5c14\u66f2\u7ebf\u6a21\u62df","text":"<pre><code>MatrixType bezier({\n    int size = 50,\n    required math.Point&lt;double&gt; start,\n    required math.Point&lt;double&gt; end,\n    required math.Point&lt;double&gt; ctrl,\n    int? seed,\n    double bias\n  })\n</code></pre>"},{"location":"API/Dart/extension_geometry/#example_12","title":"example","text":"<pre><code>...\nfinal List&lt;List&lt;double&gt;&gt; datas = GeometryGenerator.bezier(\n  start: math.Point(0, 0),\n  end: math.Point(2, 2),\n  ctrl: math.Point(4, 0),\nsize: 100\n).toList&lt;double&gt;() as List&lt;List&lt;double&gt;&gt;;\n...\nbody: ScatterChart(\nScatterChartData(\n    scatterSpots: List&lt;ScatterSpot&gt;.generate(100, (e) {\n      var [x, y] = datas[e];\n      return ScatterSpot(x, y,);\n    })\n),\n...\n</code></pre> <p>\u6548\u679c </p>"},{"location":"API/Dart/extension_geometry/#_14","title":"\u77e9\u5f62","text":""},{"location":"API/Dart/extension_geometry/#_15","title":"\u8fb9\u7f18","text":"<pre><code>static MatrixType rectangle_edge({\n    int size = 50,\n    required math.Point&lt;double&gt; top_left,\n    required double width,\n    required double height,\n    int? seed,\n    double bias = 0.0\n  })\n</code></pre>"},{"location":"API/Dart/extension_geometry/#_16","title":"\u533a\u57df","text":"<pre><code>static MatrixType rectangle_area({\n    int size = 50,\n    required math.Point&lt;double&gt; top_left,\n    required double width,\n    required double height,\n    int? seed,\n    double bias = 0.0\n  })\n</code></pre> <p>\u6ce8\uff1a\u8fd9\u4e24\u4e2a\u90fd\u662f\u7ee7\u627f\u81ea\u56db\u8fb9\u5f62\u751f\u6210\u5668</p> <p>\u4e0b\u4e00\u7bc7\uff1aCSV\u8bfb\u53d6\u5668</p>"},{"location":"API/Dart/global_methods/","title":"\u5bf9\u77e9\u9635\u7684\u5168\u5c40\u8bbe\u7f6e","text":""},{"location":"API/Dart/global_methods/#set_visible_round","title":"set_visible_round","text":"<p>\u8bbe\u7f6e\u6253\u5370\u77e9\u9635\u6570\u636e\u7684\u683c\u5f0f</p>"},{"location":"API/Dart/global_methods/#get_visible_round","title":"get_visible_round","text":"<p>\u83b7\u53d6\u6253\u5370\u77e9\u9635\u6570\u636e\u7684\u683c\u5f0f</p>"},{"location":"API/Dart/global_methods/#set_round","title":"set_round","text":"<p>\u8bbe\u7f6e\u77e9\u9635\u64cd\u4f5c\u4e2d\u7684\u8bef\u5dee\u7cbe\u5ea6</p>"},{"location":"API/Dart/global_methods/#get_round","title":"get_round","text":"<p>\u83b7\u53d6\u77e9\u9635\u64cd\u4f5c\u4e2d\u7684\u8bef\u5dee\u7cbe\u5ea6</p>"},{"location":"API/Dart/global_methods/#set_seed","title":"set_seed","text":"<p>\u8bbe\u7f6e\u968f\u673a\u79cd\u5b50</p>"},{"location":"API/Dart/global_methods/#initmp","title":"initMp","text":"<p>\u5728\u6253\u7b97\u521b\u5efa\u77e9\u9635\u5b9e\u4f8b\u4e4b\u524d\uff0c\u53ef\u4ee5\u901a\u8fc7\u65e0\u53c2\u6570\u4f20\u5165\u58f0\u660e\u8fd9\u662f\u4e00\u4e2a\u5f00\u7aef\uff0c\u6b64\u5904\u6beb\u65e0\u4f5c\u7528\uff0c\u4ec5\u4ec5\u4e3a\u4e86\u89c4\u8303\uff1b\u5982\u679c\u521b\u5efa\u4e86\u7b2c\u4e00\u4e2a\u77e9\u9635\u5b9e\u4f8b\uff0c\u5219\u53ef\u4ee5\u9009\u62e9\u6027\u4f20\u5165\u8fd9\u4e2a\u77e9\u9635\u7684self\u503c\uff0c\u6b64\u503c\u5c06\u4f5c\u4e3a\u94fe\u8868\u7684\u5934\u7ed3\u70b9</p> <p>\u5173\u4e8eMp\u7684\u5b9e\u73b0\uff0c\u5b83\u7684\u5e95\u5c42\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u94fe\u8868\u7ed3\u6784\uff0c\u540c\u65f6\u8bb0\u5f55\u5b58\u50a8\u4e86\u591a\u5c11\u4e2a<code>Pointer&lt;Pointer&lt;Matrix&gt;&gt;?</code>\uff08\u56e0\u4e3a\u521b\u5efa\u5931\u8d25\u8fd4\u56de\u7a7a\u6307\u9488\u7684\u4e5f\u7b97\uff09\u3002\u51e1\u6d89\u53ca\u5230__new__\u65b9\u6cd5\u7684\u521b\u5efa\uff0c\u90fd\u4f1a\u89e6\u53d1Signal\u4fe1\u53f7\uff0c\u6dfb\u52a0\u8282\u70b9\u5230Mp</p>"},{"location":"API/Dart/global_methods/#signal","title":"Signal","text":"<p>\u624b\u52a8\u6dfb\u52a0\u65b0\u8282\u70b9\uff0c\u4e0d\u5efa\u8bae\u5728\u5f00\u53d1\u4e2d\u4f7f\u7528</p>"},{"location":"API/Dart/global_methods/#getinstances","title":"getInstances","text":"<p>\u83b7\u53d6\u5b58\u50a8\u77e9\u9635\u7684self\u4e2a\u6570\uff0c\u4e5f\u5c31\u662f\u521b\u5efa\u4e86\u591a\u5c11\u4e2a\u77e9\u9635\u5b9e\u4f8b</p>"},{"location":"API/Dart/global_methods/#freemp","title":"freeMp","text":"<p>\u7edf\u4e00\u91ca\u653e\u5185\u5b58\uff0c\u9632\u6b62\u5185\u5b58\u6cc4\u6f0f</p> <ul> <li>\u6dfb\u52a0\u4e86\u5730\u5740\u8fdb\u5236\u6307\u5b9a\uff0chex\u4e3atrue\u6253\u5370\u5341\u516d\u8fdb\u5236\u5730\u5740\u5426\u5219\u6253\u5370\u5341\u8fdb\u5236\u5730\u5740\u3002\u53e6\u5916\u4ece</li> </ul>"},{"location":"API/Dart/global_methods/#set_mult_randnew-from-v109deleted-from-v110","title":"set_mult_rand[new from V1.0.9;deleted from V1.1.0]","text":"<p>\u5f53\u5f00\u542f\u591a\u7ebf\u7a0b\u7684\u65f6\u5019\uff0c\u4e3a\u4e86\u4fdd\u62a4\u7ebf\u7a0b\u5b89\u5168\uff0cC\u5e95\u5c42\u91c7\u7528rand_s/rand_r\u6765\u83b7\u53d6\u4f2a\u968f\u673a\u6570\uff0c\u9ed8\u8ba4\u5f00\u542f</p> <p>\u6ce8\uff1a\u81ea1.0.9\u7248\u672c\u5f00\u59cb\uff0c\u5982\u679c\u4e00\u4e2a\u968f\u673a\u6a21\u62df\u65b9\u6cd5\u591a\u6b21\u8c03\u7528\uff0c\u4e00\u5b9a\u8981\u4f7f\u7528\u591a\u7ebf\u7a0b\u5b89\u5168\uff1b\u5982\u679c\u4e00\u4e2a\u968f\u673a\u6a21\u62df\u65b9\u6cd5\u53ea\u8c03\u7528\u4e86\u4e00\u6b21\uff0c\u53ef\u4ee5\u9009\u62e9\u4f7f\u7528\u5355\u7ebf\u7a0b\u6a21\u5f0f</p>"},{"location":"API/Dart/global_methods/#get_mult_randnew-from-v109deleted-from-v110","title":"get_mult_rand[new from V1.0.9;deleted from V1.1.0]","text":"<p>\u83b7\u53d6\u662f\u5426\u8bbe\u7f6e\u4e86\u4f7f\u7528\u591a\u7ebf\u7a0b\u968f\u673a\u6570</p>"},{"location":"API/Dart/global_methods/#set_max_thread_supportnew-from-v110","title":"set_max_thread_support[new from V1.1.0]","text":"<p>\u8bbe\u7f6e\u5f53\u524d\u6700\u5927\u7ebf\u7a0b\u6570</p>"},{"location":"API/Dart/global_methods/#get_max_thread_supportnew-from-v110","title":"get_max_thread_support[new from V1.1.0]","text":"<p>\u83b7\u53d6\u5f53\u524d\u6700\u5927\u7ebf\u7a0b\u6570</p>"},{"location":"API/Dart/global_methods/#get_max_thread_sysnew-from-v110","title":"get_max_thread_sys[new from V1.1.0]","text":"<p>\u83b7\u53d6\u7cfb\u7edf\u6700\u5927\u7ebf\u7a0b\u6570</p>"},{"location":"API/Dart/global_methods/#set_simple_dvcst_valuenew-from-v110","title":"set_simple_dvcst_value[new from V1.1.0]","text":"<p>\u5b89\u5168\u7684\u8bbe\u7f6e\u88ab\u89c6\u4e3a\u7b80\u5355\u7a0b\u5e8f\u7684\u591a\u7ebf\u7a0b\u542f\u52a8\u91cf</p> <p>\u6240\u8c13\u5b89\u5168\u7684\uff0c\u5373\u4e00\u6b21\u8bbe\u7f6e\uff0c\u6c38\u4e45\u4e0a\u9501\uff0c\u5373\u4f7f\u5728\u7ebf\u7a0b\u7ade\u4e89\u7684\u6761\u4ef6\u4e0b\uff0c\u4e5f\u53ea\u6309\u7167\u7b2c\u4e00\u4e2a\u88ab\u8bbe\u7f6e\u7684\u91cf\u542f\u52a8</p>"},{"location":"API/Dart/global_methods/#get_simple_dvcst_valuenew-from-v110","title":"get_simple_dvcst_value[new from V1.1.0]","text":"<p>\u83b7\u53d6\u88ab\u89c6\u4e3a\u7b80\u5355\u7a0b\u5e8f\u7684\u591a\u7ebf\u7a0b\u542f\u52a8\u91cf</p>"},{"location":"API/Dart/global_methods/#set_complex_dvcst_valuenew-from-v110","title":"set_complex_dvcst_value[new from V1.1.0]","text":"<p>\u5b89\u5168\u7684\u8bbe\u7f6e\u88ab\u89c6\u4e3a\u590d\u6742\u7a0b\u5e8f\u7684\u591a\u7ebf\u7a0b\u542f\u52a8\u91cf</p>"},{"location":"API/Dart/global_methods/#get_complex_dvcst_valuenew-from-v110","title":"get_complex_dvcst_value[new from V1.1.0]","text":"<p>\u83b7\u53d6\u88ab\u89c6\u4e3a\u590d\u6742\u7a0b\u5e8f\u7684\u591a\u7ebf\u7a0b\u542f\u52a8\u91cf</p>"},{"location":"API/Dart/global_methods/#get_timenew-from-v110","title":"get_time[new from V1.1.0]","text":"<p>\u83b7\u53d6\u5f53\u524d\u8fd0\u884c\u65f6\u95f4\u5e27\uff0c\u7c7b\u4f3cPython\u7684time.time\u65b9\u6cd5\uff0c\u53ef\u4ee5\u4f7f\u7528Stopwatch\u7c7b\u4ee3\u66ff</p>"},{"location":"API/Dart/global_methods/#set_multp_shownnew-from-v110","title":"set_multp_shown[new from V1.1.0]","text":"<p>\u8bbe\u7f6e\u5e95\u5c42\u7ebf\u7a0b\u4fe1\u606f\u53ef\u89c6\u5316\u542f\u52a8</p>"},{"location":"API/Dart/global_methods/#get_multp_shownnew-from-v110","title":"get_multp_shown[new from V1.1.0]","text":"<p>\u83b7\u53d6\u5e95\u5c42\u7ebf\u7a0b\u4fe1\u606f\u53ef\u89c6\u5316\u662f\u5426\u542f\u52a8</p>"},{"location":"API/Dart/global_methods/#set_simple_dvcst_value_forcenew-from-v110","title":"set_simple_dvcst_value_force[new from V1.1.0]","text":"<p>[Danger]\u5f3a\u5236\u4fee\u6539\u88ab\u89c6\u4e3a\u7b80\u5355\u7a0b\u5e8f\u7684\u591a\u7ebf\u7a0b\u542f\u52a8\u91cf\uff0c\u6ca1\u6709\u4efb\u4f55\u6570\u503c\u8981\u6c42</p>"},{"location":"API/Dart/global_methods/#set_complex_dvcst_value_forcenew-from-v110","title":"set_complex_dvcst_value_force[new from V1.1.0]","text":"<p>[Danger]\u5f3a\u5236\u4fee\u6539\u88ab\u590d\u6742\u7b80\u5355\u7a0b\u5e8f\u7684\u591a\u7ebf\u7a0b\u542f\u52a8\u91cf\uff0c\u6ca1\u6709\u4efb\u4f55\u6570\u503c\u8981\u6c42</p> <p>\u4e0b\u4e00\u7bc7\uff1a\u6784\u9020\u51fd\u6570</p>"},{"location":"API/Dart/methods/","title":"MatrixType\u7684\u65b9\u6cd5","text":""},{"location":"API/Dart/methods/#visible","title":"visible","text":"<p>\u53ef\u89c6\u5316\u77e9\u9635\u7684\u6570\u636e\uff0c \u6570\u636e\u7684\u7cbe\u786e\u5ea6\u53ef\u4ee5\u901a\u8fc7set_visible_round\u65b9\u6cd5\u8bbe\u7f6e</p>"},{"location":"API/Dart/methods/#visible_spc","title":"visible_spc","text":"<p>\u67e5\u770b\u77e9\u9635\u6709\u54ea\u4e9b\u7279\u6b8a\u5c5e\u6027</p>"},{"location":"API/Dart/methods/#row_-column_","title":"row_ | column_","text":"<p>\u83b7\u53d6\u77e9\u9635\u7684\u67d0\u884c\uff08\u5217\uff09\uff0c\u8c03\u7528\u8be5\u51fd\u6570\u65f6\uff0c\u540c\u65f6\u4e5f\u53ef\u4ee5\u58f0\u660ePointer\u6216\u8005List\u4e24\u79cd\u7c7b\u578b\uff08\u4e0d\u58f0\u660e\u6309\u7167List\u7c7b\u578b\u5904\u7406\uff09\uff0c\u8868\u660e\u8981\u83b7\u53d6\u54ea\u79cd\u7c7b\u578b\uff0c\u4e0d\u58f0\u660e\u4f1a\u6309\u7167list\u7c7b\u578b\u8fd4\u56de\uff0c\u5efa\u8bae\u662f\u4e0d\u58f0\u660e\u3002</p>"},{"location":"API/Dart/methods/#at","title":"at","text":"<p>\u83b7\u53d6\u6307\u5b9a\u4f4d\u7f6e\u7684\u6570\u636e</p>"},{"location":"API/Dart/methods/#transpose","title":"transpose","text":"<p>\u83b7\u53d6\u8f6c\u7f6e\u77e9\u9635</p>"},{"location":"API/Dart/methods/#_1","title":"\u521d\u7b49\u53d8\u6362\u2014\u2014\u65e0\u8fd4\u56de\u503c","text":"<ol> <li>exchange_row/exchange_column \u4ea4\u6362\u53d8\u6362</li> <li>multiply_row/multiply_column \u500d\u4e58\u53d8\u6362</li> <li>add_row/add_column \u628a\u500d\u4e58\u884c\uff08\u5217\uff09\u52a0\u5230\u53e6\u4e00\u884c\uff08\u5217\uff09</li> </ol>"},{"location":"API/Dart/methods/#hassameshape","title":"hasSameShape","text":"<p>\u5224\u65ad\u4e24\u4e2a\u77e9\u9635\u662f\u4e0d\u662f\u5f62\u72b6\u4e00\u6837</p>"},{"location":"API/Dart/methods/#add","title":"add","text":"<p><code>+</code>\u64cd\u4f5c</p>"},{"location":"API/Dart/methods/#minus","title":"minus","text":"<p><code>-</code>\u64cd\u4f5c</p>"},{"location":"API/Dart/methods/#multiply","title":"multiply","text":"<p><code>*</code>\u64cd\u4f5c</p>"},{"location":"API/Dart/methods/#divide","title":"divide","text":"<p><code>/</code>\u64cd\u4f5c</p>"},{"location":"API/Dart/methods/#add_no_returned","title":"add_no_returned","text":"<p><code>+</code>\u64cd\u4f5c\uff0c\u4f46\u662f\u6539\u53d8\u77e9\u9635\u672c\u8eab</p>"},{"location":"API/Dart/methods/#minus_no_returned","title":"minus_no_returned","text":"<p><code>-</code>\u64cd\u4f5c\uff0c\u4f46\u662f\u6539\u53d8\u77e9\u9635\u672c\u8eab</p>"},{"location":"API/Dart/methods/#multiply_no_returned","title":"multiply_no_returned","text":"<p><code>*</code>\u64cd\u4f5c\uff0c\u4f46\u662f\u6539\u53d8\u77e9\u9635\u672c\u8eab</p>"},{"location":"API/Dart/methods/#divide_no_returned","title":"divide_no_returned","text":"<p><code>/</code>\u64cd\u4f5c\uff0c\u4f46\u662f\u6539\u53d8\u77e9\u9635\u672c\u8eab</p>"},{"location":"API/Dart/methods/#matmul","title":"matmul","text":"<p>\u5de6\u884c\u4e58\u53f3\u5217\u505a\u5185\u79ef\uff0c\u5e76\u4e14\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u77e9\u9635\u5bf9\u8c61</p>"},{"location":"API/Dart/methods/#kronecker","title":"kronecker","text":"<p>\u4e24\u4e2a\u4efb\u610f\u5f62\u72b6\u7684\u77e9\u9635\u505akronecker\u79ef</p>"},{"location":"API/Dart/methods/#cofactor","title":"cofactor","text":"<p>\u83b7\u53d6\u4f59\u5b50\u5f0f\u77e9\u9635</p>"},{"location":"API/Dart/methods/#compare","title":"compare","text":"<p>\u6bd4\u8f83\u4e24\u4e2a\u4e00\u6837\u5f62\u72b6\u7684\u77e9\u9635\u7684\u6570\u636e\uff0c\u5e76\u4e14\u8fd4\u56de\u77e9\u9635\u5f62\u72b6\u5927\u5c0f\u7684List&gt;"},{"location":"API/Dart/methods/#sum","title":"sum","text":"<p>\u77e9\u9635\u6c42\u548c\uff0c\u5982\u679cdim=0\uff0c\u5219\u6309\u7167\u884c\u6c42\uff0c\u8fd4\u56de\u6570\u7ec4\uff1b\u5982\u679cdim=1\uff0c\u5219\u6309\u7167\u5217\u6c42\uff0c\u8fd4\u56de\u6570\u7ec4\uff1bdim\u4e3a\u5176\u4ed6\u503c\u5219\u8fd4\u56de\u6574\u4f53\u7684\u548c</p>"},{"location":"API/Dart/methods/#mean","title":"mean","text":"<p>\u77e9\u9635\u5747\u503c\uff0c\u539f\u7406\u540csum</p>"},{"location":"API/Dart/methods/#min-max","title":"min | max","text":"<p>\u77e9\u9635\u6700\u503c\uff0c\u539f\u7406\u540csum</p>"},{"location":"API/Dart/methods/#cut","title":"cut","text":"<p>\u83b7\u53d6\u77e9\u9635\u7684\u5185\u90e8\u88c1\u526a\u77e9\u9635</p>"},{"location":"API/Dart/methods/#cutfree","title":"cutfree","text":"<p>\u83b7\u53d6\u4ece\u77e9\u9635\u5185\u90e8\u4e00\u70b9\u5f00\u59cb\u81ea\u7531\u88c1\u526a\u5c3a\u5bf8\u7684\u77e9\u9635\uff0c\u5916\u90e8\u7528number\u4ee3\u66ff</p>"},{"location":"API/Dart/methods/#concat","title":"concat","text":"<p>\u83b7\u53d6\u4e24\u4e2a\u77e9\u9635\u7684\u6a2a\uff08\u7eb5\uff09\u62fc\u63a5\u7684\u77e9\u9635</p>"},{"location":"API/Dart/methods/#reshape","title":"reshape","text":"<p>\u83b7\u53d6\u77e9\u9635size\u4e0d\u53d8\u91cd\u5851\u5f62\u72b6\u7684\u77e9\u9635</p>"},{"location":"API/Dart/methods/#reshape_no_returned","title":"reshape_no_returned","text":"<p>\u77e9\u9635\u672c\u8eabsize\u4e0d\u53d8\uff0c\u91cd\u5851\u5f62\u72b6</p>"},{"location":"API/Dart/methods/#resize","title":"resize","text":"<p>\u83b7\u53d6\u77e9\u9635\u66f4\u6539\u5c3a\u5bf8\u540e\u7684\u65b0\u77e9\u9635\uff0c\u82e5\u5c3a\u5bf8\u589e\u5927\uff0c\u5219\u7528number\u4ee3\u66ff\u3002\u4ece\u4e0a\u5230\u4e0b\u3001\u4ece\u5de6\u5f80\u53f3\u53d6\u503c\uff0chorizontal\u4e3atrue\uff0c\u4ece\u6bcf\u884c\u5f00\u59cb\uff0c\u53cd\u4e4b\u4ece\u6bcf\u5217\u5f00\u59cb\u3002</p>"},{"location":"API/Dart/methods/#resize_no_returned","title":"resize_no_returned","text":"<p>\u91cd\u5851\u672c\u8eab\u5c3a\u5bf8</p>"},{"location":"API/Dart/methods/#power","title":"power","text":"<p>\u5982\u679creverse\u4e3atrue\uff0c\u83b7\u53d6number\u4e3a\u5e95\uff0c \u77e9\u9635\u6bcf\u4e2a\u6570\u636e\u4e3a\u5e42\u6b21\u65b9\u7684\u65b0\u77e9\u9635\uff0c\u53cd\u4e4b\u3002</p>"},{"location":"API/Dart/methods/#atan2","title":"atan2","text":"<p>\u83b7\u53d6\u5207\u89d2\u5927\u5c0f\u3002reverse\u539f\u7406\u540c\u4e0a\u3002</p>"},{"location":"API/Dart/methods/#sigmoid","title":"sigmoid","text":"<p>\u83b7\u53d6\u77e9\u9635\u5bf9\u5e94\u7684sigmoid\u6620\u5c04\u77e9\u9635</p>"},{"location":"API/Dart/methods/#softmax","title":"softmax","text":"<p>dim=0\u65f6\uff0c\u6309\u884c\u6c42\u548c\u8fdb\u884csoftmax\u6620\u5c04\uff1bdim=1\uff0c\u6309\u5217\u6c42\u548c\u8fdb\u884csoftmax\u6620\u5c04\uff1bdim\u4e3a\u5176\u4ed6\u6574\u6570\u5219\u6574\u4f53\u6c42\u548c\u505asoftmax\u6620\u5c04\u3002\u6700\u540e\u8fd4\u56de\u65b0\u77e9\u9635</p>"},{"location":"API/Dart/methods/#shuffle","title":"shuffle","text":"<p>\u6570\u636e\u6253\u4e71</p>"},{"location":"API/Dart/methods/#sort_no_returned","title":"sort_no_returned","text":"<p>dim=0\u65f6\uff0c\u6309\u884c\u6392\u5e8f\uff1bdim=1\uff0c\u6309\u5217\u6392\u5e8f\uff1bdim\u4e3a\u5176\u4ed6\u6574\u6570\u5219\u6574\u4f53\u6392\u5e8f\u3002</p>"},{"location":"API/Dart/methods/#sort","title":"sort","text":"<p>dim=0\u65f6\uff0c\u6309\u884c\u6392\u5e8f\uff1bdim=1\uff0c\u6309\u5217\u6392\u5e8f\uff1bdim\u4e3a\u5176\u4ed6\u6574\u6570\u5219\u6574\u4f53\u6392\u5e8f\uff0c\u7136\u540e\u5f97\u5230\u6392\u5e8f\u597d\u7684\u65b0\u77e9\u9635\u3002</p>"},{"location":"API/Dart/methods/#rref","title":"rref","text":"<p>\u83b7\u53d6\u77e9\u9635\u7684\u6700\u7b80\u9636\u68af\u578b</p>"},{"location":"API/Dart/methods/#setmask","title":"setMask","text":"<p>\u8bbe\u7f6e\u77e9\u9635nan\u548c\u6b63\u8d1f\u65e0\u7a77\u5927\u6570\u636e\u7684\u66ff\u6362\u503c\uff0c\u4f1a\u6539\u53d8\u77e9\u9635\u672c\u8eab\u3002</p>"},{"location":"API/Dart/methods/#tolist","title":"toList","text":"<p>\u6839\u636e\u4f20\u5165\u7684\u7c7b\u578b\uff0c\u8fd4\u56de\u5bf9\u5e94\u5f62\u72b6\u7684\u4e8c\u7ef4\u5217\u8868\u3002\u5bf9\u4e8e\u6cca\u677e\u5206\u5e03\u8fd9\u6837\u7684\u6570\u636e\u975e\u5e38\u6709\u7528\u3002</p>"},{"location":"API/Dart/methods/#std","title":"std","text":"<p>\u6c42\u89e3\u6807\u51c6\u5dee\uff0c\u5982\u679c\u8bbe\u7f6esample\u4e3atrue\uff0c\u5219\u89c6\u4e3a\u6837\u672c\u6807\u51c6\u5dee</p>"},{"location":"API/Dart/methods/#variance","title":"variance","text":"<p>\u6c42\u89e3\u65b9\u5dee\uff0c\uff0c\u5982\u679c\u8bbe\u7f6esample\u4e3atrue\uff0c\u5219\u89c6\u4e3a\u6837\u672c\u6807\u51c6\u65b9\u5dee</p>"},{"location":"API/Dart/methods/#median","title":"median","text":"<p>\u6c42\u89e3\u4e2d\u4f4d\u6570</p>"},{"location":"API/Dart/methods/#norm","title":"norm","text":"<p>\u6c42\u89e3\u77e9\u9635\u8303\u6570\u3002\u5982\u679cn==-2\uff0c\u5219\u8fd4\u56de\u77e9\u9635\u7684\u8d1f\u65e0\u7a77\u8303\u6570\uff1b\u5982\u679cn==-1\uff0c\u5219\u8fd4\u56de\u77e9\u9635\u7684\u6b63\u65e0\u7a77\u8303\u6570\uff1b\u5982\u679c\u8bbe\u7f6en==1\uff0c\u5219\u8fd4\u56de\u77e9\u9635\u7684L1\u8303\u6570\uff0c\u5982\u679cn==0\u6216\u8005\u5176\u4ed6\u4e0d\u5c0f\u4e8e2\u7684\u6b63\u6574\u6570\uff0c\u5219\u8fd4\u56de\u8303\u6570\uff08\u5305\u542b\u884c\u5217\u5411\u91cf\u7684\u8303\u6570\u6a21\u578b\u3001\u77e9\u9635\u8303\u6570\u6a21\u5f0f\uff09\uff0c\u6ce8\u610f\u8fd9\u91ccL0\u8303\u6570\u662f\u4e00\u4e2a\u6574\u6570\u8fd4\u56de\u503c</p>"},{"location":"API/Dart/methods/#norm2","title":"norm2","text":"<p>L2\u8303\u6570\u3002\u5373\u6b27\u6c0f\u8ddd\u79bb</p>"},{"location":"API/Dart/methods/#norm_inf","title":"norm_inf","text":"<p>\u77e9\u9635\u7684\u6b63\u65e0\u7a77\u8303\u6570</p>"},{"location":"API/Dart/methods/#norm_negainf","title":"norm_negainf","text":"<p>\u77e9\u9635\u7684\u8d1f\u65e0\u7a77\u8303\u6570</p>"},{"location":"API/Dart/methods/#norm_one","title":"norm_one","text":"<p>\u77e9\u9635\u7684L1\u8303\u6570</p>"},{"location":"API/Dart/methods/#norm_zero","title":"norm_zero","text":"<p>L0\u8303\u6570</p>"},{"location":"API/Dart/methods/#mode","title":"mode","text":"<p>\u6c42\u89e3\u4f17\u6570\uff08\u6b64\u65b9\u6cd5\u6ca1\u6709\u57fa\u4e8eC-API\uff09</p>"},{"location":"API/Dart/methods/#argmax","title":"argmax","text":"<p>\u83b7\u53d6\u6700\u5927\u503c\u7d22\u5f15</p>"},{"location":"API/Dart/methods/#argmin","title":"argmin","text":"<p>\u83b7\u53d6\u6700\u5c0f\u503c\u7d22\u5f15</p>"},{"location":"API/Dart/methods/#flatten","title":"flatten","text":"<p>\u8fd4\u56de\u4e00\u4e2a1 * size\u7684\u6241\u5e73\u5316\u77e9\u9635\uff0cmode\u53c2\u6570\u51b3\u5b9a\u4e86\u4ece\u6a2a\u5411\u5f00\u59cb\u8fd8\u662f\u7eb5\u5411</p>"},{"location":"API/Dart/methods/#flatten_list","title":"flatten_list","text":"<p>\u8fd4\u56de\u4e00\u4e2a\u6241\u5e73\u5316\u540e\u7684\u4e00\u7ef4\u5217\u8868</p> <p>\u6ce8\uff1a1.0.9\u7248\u672c\u5f00\u59cb\uff0cflatten_list\u5df2\u5f03\u7528\uff0c\u6539\u6210\u4e86toDoubleVector\u51fd\u6570</p>"},{"location":"API/Dart/methods/#replace","title":"replace","text":"<p>\u83b7\u53d6\u66ff\u6362\u4e0d\u7b26\u5408\u6761\u4ef6\u7684\u503c\u540e\u7684\u77e9\u9635</p>"},{"location":"API/Dart/methods/#replace_no_returned","title":"replace_no_returned","text":"<p>\u66ff\u6362\u77e9\u9635\u4e0d\u7b26\u5408\u6761\u4ef6\u7684\u503c</p>"},{"location":"API/Dart/methods/#normalization","title":"normalization","text":"<p>\u83b7\u53d6\u5f52\u4e00\u5316\u540e\u7684\u77e9\u9635\uff0c0\u30011\u3001\u5176\u4ed6\u503c\u5206\u522b\u5bf9\u5e94\u7ebf\u6027\u5f52\u4e00\u5316\u3001\u5747\u503c\u5f52\u4e00\u5316\u3001z-score\u5f52\u4e00\u5316</p>"},{"location":"API/Dart/methods/#slice","title":"slice","text":"<p>\u83b7\u53d6\u77e9\u9635\u5207\u7247\u5207\u51fa\u7684\u77e9\u9635\uff0c\u5982\u679c\u4e0d\u6307\u5b9a\u5207\u5230\u54ea\uff0c\u5219\u5207\u81f3\u7ec8\u70b9\u884c\uff08\u5217\uff09</p>"},{"location":"API/Dart/methods/#clip","title":"clip","text":"<p>\u83b7\u53d6\u4e00\u4e2a\u6846\u4f4f\u8303\u56f4\u7684\u77e9\u9635\uff0c\u77e9\u9635\u6570\u636e\u6ee1\u8db3lb &lt;= x &lt;= ub\uff0c\u5c0f\u4e8e\u5219\u53d8\u6210lb\uff0c\u5927\u4e8e\u53d8\u6210ub</p>"},{"location":"API/Dart/methods/#clip_no_returned","title":"clip_no_returned","text":"<p>\u6846\u4f4f\u77e9\u9635\u672c\u8eab\u8303\u56f4</p>"},{"location":"API/Dart/methods/#all","title":"all","text":"<p>\u77e9\u9635\u6240\u6709\u503c\u5168\u6ee1\u8db3\u6761\u4ef6\u8fd4\u56detrue\uff0c\u53cd\u4e4b</p>"},{"location":"API/Dart/methods/#any","title":"any","text":"<p>\u77e9\u9635\u4efb\u610f\u503c\u6ee1\u8db3\u6761\u4ef6\u8fd4\u56detrue\uff0c\u53cd\u4e4b</p>"},{"location":"API/Dart/methods/#counter","title":"counter","text":"<p>\u5bf9\u77e9\u9635\u4e2d\u6ee1\u8db3\u6761\u4ef6\u7684\u503c\u8ba1\u6570</p>"},{"location":"API/Dart/methods/#reduce","title":"reduce","text":"<p>\u5bf9\u77e9\u9635\u76f8\u90bb\u7684\u4e24\u4e2a\u503c\u7d2f\u8ba1\u64cd\u4f5c</p>"},{"location":"API/Dart/methods/#where","title":"where","text":"<p>[condition] \u662f\u5fc5\u987b\u4f20\u5165\u7684\u6761\u4ef6\u51fd\u6570\uff0c\u4e5f\u540c\u65f6\u6dfb\u52a0\u53e6\u4e00\u4e2a\u7ea6\u675f [any]\uff0c\u4f46\u8fd9\u65f6\u5019 [obj] \u4e0d\u80fd\u4e3a\u7a7a\u3002\u53ea\u64cd\u4f5c\u6ee1\u8db3\u6761\u4ef6\u7684\u503c \u82e5\u4e0d\u4f20\u5165 [cpl] \u53c2\u6570\uff0c\u5219\u9ed8\u8ba4\u8fd4\u56de\u6ee1\u8db3\u6761\u4ef6\u7684\u503c\u5230\u4e00\u4e2a\u4e00\u7ef4\u5217\u8868\uff1b\u5426\u5219\uff0c\u5219\u6309\u7167cpl\u51fd\u6570\u66f4\u65b0\u7684\u503c\u4e0e\u672a\u6ee1\u8db3\u6761\u4ef6\u7684\u503c\u4e00\u8d77\u5199\u5165\u539f\u6765\u77e9\u9635\uff0c\u8fd4\u56de\u4e00\u4e2a\u77e9\u9635\u5bf9\u8c61</p>"},{"location":"API/Dart/methods/#qr","title":"qr","text":"<p>\u83b7\u53d6\u77e9\u9635QR\u5206\u89e3\u5f97\u5230\u7684\u4e24\u4e2a\u77e9\u9635\u7ec4\u6210\u7684\u5217\u8868</p>"},{"location":"API/Dart/methods/#hist","title":"Hist","text":"<p>\u83b7\u53d6\u672a\u53ef\u89c6\u5316\u3001\u7edf\u8ba1\u51fa\u6765\u7684\u503c\u8ba1\u6570</p>"},{"location":"API/Dart/methods/#bar","title":"Bar","text":"<p>\u83b7\u53d6\u672a\u53ef\u89c6\u5316\u3001\u6839\u636e\u6761\u4ef6\u7ea6\u675f\u5206\u7c7b\u5e76\u4e14\u7b26\u5408\u751f\u6210\u6807\u7b7e\u7684\u503c\u8ba1\u6570</p>"},{"location":"API/Dart/methods/#magic","title":"magic !!!","text":"<p>[@alert]\u9ad8\u81ea\u7531\u5ea6\u5730\u4f7f\u7528\u62bd\u8c61\u51fa\u6765\u7684\u65b9\u5f0f\u6765\u81ea\u5b9a\u4e49\u62bd\u8c61\u5730\u53cd\u5c04\u77e9\u9635\u6570\u636e</p>"},{"location":"API/Dart/methods/#customize","title":"customize","text":"<p>\u76f8\u8f83\u4e8e\u77e9\u9635\u591a\u6b21\u521b\u5efa\u5bf9\u8c61\u7684\u8fd0\u7b97\u65b9\u5f0f\uff0ccustomize\u53ef\u4ee5\u6839\u636e\u8fd0\u7b97\u6d41\u7a0b\u521b\u5efa\u4e00\u4e2a\u77e9\u9635\u5bf9\u8c61</p>"},{"location":"API/Dart/methods/#clip_reverse","title":"clip_reverse","text":"<p>\u5728\u8303\u56f4\u5916\u7684\u6570\u636e\u4e0d\u53d1\u751f\u53d8\u5316\uff0c\u5426\u5219\u6309\u7167\u6761\u4ef6\u8bbe\u7f6e\u503c</p>"},{"location":"API/Dart/methods/#clip_reverse_no_returned","title":"clip_reverse_no_returned","text":"<p>clip_reverse\u7684\u65e0\u8fd4\u56de\u503c\u65b9\u5f0f</p>"},{"location":"API/Dart/methods/#findindexs","title":"findIndexs","text":"<p>\u67e5\u8be2\u6240\u6709\u7b26\u5408\u6761\u4ef6\u503c\u7684\u7d22\u5f15\uff0c\u6bcf\u884c\u90fd\u67e5\u8be2\uff0c\u5176\u4e2dprediction\u662f\u9884\u6d4b\u5e73\u5747\u6bcf\u884c\u6709\u591a\u5c11\u7b26\u5408\u6761\u4ef6\u7684\u503c\uff0c\u4e0d\u4f20\u5165\u5219\u8bbe\u7f6e\u4e3a\u884c\u957f\u5ea6\u7684\u56db\u5206\u4e4b\u4e00\u53d6\u6574\u3002\u8fd4\u56de\u503c\u662f\u5305\u542b\u5339\u914d\u503c\u7d22\u5f15\u7684\u4e8c\u7ef4\u5217\u8868\uff0c\u5143\u7d20\u53ef\u8c13\u7a7a\u503c\u4e00\u7ef4\u5217\u8868</p>"},{"location":"API/Dart/methods/#rotate","title":"rotate","text":"<p>\u83b7\u53d6\u77e9\u9635\u7684\u65cb\u8f6c\u77e9\u9635\uff0c\u65cb\u8f6c\u89d2\u5ea6\u5fc5\u987b\u662f90\u7684\u6574\u6570\u500d\uff0c\u8d1f\u503c\u8868\u793a\u9006\u65f6\u9488\uff0c\u6b63\u503c\u8868\u793a\u987a\u65f6\u9488</p>"},{"location":"API/Dart/methods/#mirror","title":"mirror","text":"<p>\u83b7\u53d6\u77e9\u9635\u7684\u955c\u50cf\uff0cmode == 0\u8868\u793a\u6a2a\u5411\u955c\u50cf\u3001\u5176\u4ed6\u503c\u8868\u793a\u603b\u7ebf\u955c\u50cf</p>"},{"location":"API/Dart/methods/#decentralizate","title":"decentralizate","text":"<p>\u83b7\u53d6\u53bb\u4e2d\u5fc3\u5316\u7684\u77e9\u9635</p>"},{"location":"API/Dart/methods/#covariance","title":"covariance","text":"<p>\u8ba1\u7b97\u4e24\u4e2a\u77e9\u9635\u7684\u534f\u65b9\u5dee\u503c</p>"},{"location":"API/Dart/methods/#cov","title":"cov","text":"<p>\u5f53\u4e0d\u4f20\u5165\u53e6\u4e00\u4e2a\u77e9\u9635\u65f6\uff0c\u8ba1\u7b97\u5f53\u524d\u77e9\u9635\u7684\u534f\u65b9\u5dee\u77e9\u9635\uff0c\u5426\u5219\u83b7\u53d6\u4e8c\u8005\u7684\u534f\u65b9\u5dee\u77e9\u9635\u3002\u5e95\u5c42\u5b9e\u73b0\u65f6\uff0c\u89c6\u7eb5\u5411\u4e3a\u53d8\u91cf\uff0c\u6a2a\u5411\u4e3a\u7279\u5f81</p>"},{"location":"API/Dart/methods/#pearsoncoef","title":"pearsonCoef","text":"<p>\u76ae\u5c14\u68ee\u7cfb\u6570\u8ba1\u7b97</p>"},{"location":"API/Dart/methods/#mse","title":"MSE","text":"<p>\u5747\u65b9\u8bef\u5dee\u3002\u5728\u51e0\u4e2a\u8bc4\u5206\u6807\u51c6\u4e2d\uff0c\u4f20\u5165\u7684\u77e9\u9635\u53c2\u6570\uff08rea\uff09\u8868\u793a\u771f\u5b9e\u6570\u636e\uff0c\u800c\u672c\u8eab\u8868\u793a\u9884\u6d4b\u6570\u636e</p>"},{"location":"API/Dart/methods/#rmse","title":"RMSE","text":"<p>\u5747\u65b9\u6839\u8bef\u5dee</p>"},{"location":"API/Dart/methods/#mae","title":"MAE","text":"<p>\u5e73\u5747\u7edd\u5bf9\u8bef\u5dee</p>"},{"location":"API/Dart/methods/#mape","title":"MAPE","text":"<p>\u5e73\u5747\u7edd\u5bf9\u767e\u5206\u6bd4\u8bef\u5dee</p>"},{"location":"API/Dart/methods/#r2","title":"R2","text":"<p>\u51b3\u5b9a\u7cfb\u6570</p>"},{"location":"API/Dart/methods/#smape","title":"SMAPE","text":"<p>\u5bf9\u79f0\u5e73\u5747\u7edd\u5bf9\u767e\u5206\u6bd4\u8bef\u5dee</p>"},{"location":"API/Dart/methods/#fill_diagonal","title":"fill_diagonal","text":"<p>\u5bf9\u77e9\u9635\u7684\u6700\u5c0f\u7ef4\u5ea6\u5bf9\u89d2\u4e0a\u7684\u503c\u6362\u4e3anumber</p>"},{"location":"API/Dart/methods/#choice","title":"choice","text":"<p>\u5982\u679c\u6839\u636e\u6743\u91cd\u83b7\u53d6\u6570\u636e\uff0c\u6743\u91cd\u53ef\u4ee5\u662f\u7b49\u5217\u957f\u4e00\u7ef4\u5217\u8868\uff0c\u4e5f\u53ef\u4ee5\u662f\u540c\u5f62\u72b6\u77e9\u9635\u3002\u89c6\u884c\u4e3a\u6837\u672c\u3002\u5176\u4e2dmethod\u65b9\u6cd5\u5206\u522b\u4e3a0\u30011\u3001\u5176\u4ed6\u6574\u6570\u65f6\uff0c\u6743\u91cd\u6620\u5c04\u4e3a\u539f\u503c\u3001sigmoid\u51fd\u6570\u503c\u3001\u7edd\u5bf9\u503c\uff1b\u5982\u679c\u4e0d\u4f20\u5165\u6743\u91cd\uff0c\u5219\u6309\u7167\u7b49\u6982\u7387\u5904\u7406</p>"},{"location":"API/Dart/methods/#concats","title":"concats","text":"<p>concat\u51fd\u6570\u7684\u5347\u7ea7\u7248\u672c\uff0c\u53ef\u6700\u591a\u4e00\u6b21\u62fc\u63a5\u56db\u4e2a\u77e9\u9635</p>"},{"location":"API/Dart/methods/#split","title":"split","text":"<p>\u6839\u636e\u4f20\u5165\u957f\u5ea6\u4e3an\u4e14\u4e25\u683c\u9012\u589e\u7684\u8303\u56f4\u5185\u6b63\u6574\u6570\u5217\u8868\uff0c\u83b7\u53d6\u88ab\u6309\u7167\u7d22\u5f15\u5206\u6210n+1\u4efd\u7684\u77e9\u9635\u5217\u8868</p>"},{"location":"API/Dart/methods/#split_equal","title":"split_equal","text":"<p>\u6309\u7167\u6b65\u957f\u5747\u5206\u77e9\u9635\u5f97\u5230\u77e9\u9635\u5217\u8868\u3002\u5982\u679c\u6b65\u957f\u4e0e\u6240\u5207\u5206\u65b9\u5411\u957f\u5ea6\u4e00\u6837\uff0c\u5219\u83b7\u53d6\u77e9\u9635\u7684\u6df1\u62f7\u8d1d\u5b9e\u4f8b</p>"},{"location":"API/Dart/methods/#cover","title":"cover","text":"<p>\u5bf9\u67d0\u4e2a\u77e9\u9635\u4ece\u5176\u5185\u90e8\u67d0\u70b9\u5f00\u59cb\u7528\u53e6\u4e00\u4e2a\u77e9\u9635\u8986\u76d6\uff0c\u591a\u4f59\u7684\u6570\u636e\u6392\u9664\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u77e9\u9635</p>"},{"location":"API/Dart/methods/#stretch","title":"stretch","text":"<p>\u6cbf\u7740\u6a2a/\u7ad6\u65b9\u5411\u5bf9\u77e9\u9635\u62c9\u4f38\uff0cmethod\u8868\u793a\u91c7\u7528\u7684\u7b56\u7565\u2014\u2014\u91cd\u590d(0)\u3001\u66ff\u6362(1)\u3001\u5934\u90e8\u5ef6\u5c55(2)\u3001\u5c3e\u90e8\u5ef6\u5c55(3)\u3001\u955c\u50cf(4)\u3001\u955c\u50cf\u7684\u955c\u50cf(\u5176\u4ed6)</p>"},{"location":"API/Dart/methods/#diffcenter","title":"diffCenter","text":"<p>\u5728\u67d0\u8303\u56f4\u5185\uff0c\u4f20\u5165\u8be5\u8303\u56f4\u5185\u8fde\u7eed\u53ef\u5bfc\u7684\u51fd\u6570\uff08\u4e0d\u505a\u68c0\u67e5\uff09\u5b9e\u73b0\u6c42\u5bfc\uff0c\u57fa\u4e8e\u4e2d\u5fc3\u5dee\u5206\u6cd5\uff0c\u6700\u540e\u5f97\u5230\u5bfc\u6570\u77e9\u9635\uff08\u68af\u5ea6\u77e9\u9635\uff09</p> <p>\u6ce8\uff1a\u8be5\u65b9\u6cd5\u501f\u9274\u4e8eGSL2.8\u7684\u4e2d\u5fc3\u5dee\u5206\u6cd5</p>"},{"location":"API/Dart/methods/#get_range","title":"get_range","text":"<p>\u83b7\u53d6\u8303\u56f4\uff08\u53ea\u5305\u542b\u6700\u5c0f\u503c\u548c\u6700\u5927\u503c\uff09</p>"},{"location":"API/Dart/methods/#cumsum","title":"cumsum","text":"<p>\u83b7\u53d6\u4e0e\u524d\u4e00\u4e2a\u7684\u7d2f\u79ef\u548c\uff0c\u5f53dim\u8bbe\u7f6e\u96640\u6216\u80051\u4e4b\u5916\u7684\u6574\u6570\u65f6\uff0c\u5fc5\u987b\u8bbe\u7f6eflatten\u53c2\u6570\uff0c\u5f53\u4e3atrue\uff0c\u5219\u8fd4\u56de1 * size\u7684\u4e8c\u7ef4\u6570\u7ec4\uff0c\u53cd\u4e4b\u5f62\u72b6\u4e0d\u53d8</p>"},{"location":"API/Dart/methods/#sgn","title":"sgn","text":"<p>\u5f53\u6570\u636e\u5c0f\u4e8e0\u83b7\u53d6-1\uff0c\u7b49\u4e8e0\u5f97\u52300\uff0c\u5927\u4e8e0\u83b7\u53d61\uff0c\u6ce8\u610fMatPly\u662f\u4ee5double\u4e3a\u6838\u5fc3</p>"},{"location":"API/Dart/methods/#todoublevector","title":"toDoubleVector","text":"<p>\u8f6c\u6210\u4e00\u7ef4\u5217\u8868\uff08\u5e95\u5c42\u662fflatten\uff09</p>"},{"location":"API/Dart/methods/#tointvector","title":"toIntVector","text":"<p>\u8f6c\u6210\u4e00\u7ef4\u5217\u8868\uff08\u5e95\u5c42\u662fflatten\uff09</p>"},{"location":"API/Dart/methods/#toboolvector","title":"toBoolVector","text":"<p>\u8f6c\u6210\u4e00\u7ef4\u5217\u8868\uff08\u5e95\u5c42\u662fflatten\uff09</p>"},{"location":"API/Dart/methods/#shake","title":"shake","text":"<p>\u5bf9\u77e9\u9635\u6570\u636e\u6309\u7167bias\u968f\u673a\u504f\u79fb\u5185[-bias / 2, bias / 2]\u5927\u5c0f</p>"},{"location":"API/Dart/methods/#confrontnew-from-v110","title":"confront[new from V1.1.0]","text":"<p>\u4e24\u4e2a\u77e9\u9635\u76f4\u63a5\u7684\u64cd\u4f5c</p>"},{"location":"API/Dart/methods/#xxx_asyncnew-from-v110","title":"XXX_async[new from V1.1.0]","text":"<p>\u4f8b\u5982\uff1adiff_center_async\u662f\u5f02\u6b65\u7248\u672c\u7684diff_center\u4e2d\u5fc3\u5dee\u5206\u51fd\u6570</p> <p>\u6ce8\uff1a\u5bf9\u4e8eC\u5e95\u5c42\u672a\u4f18\u5316\u6216\u8005\u539f\u751f\u672a\u4f18\u5316\u7684\u4e00\u4e9b\u65b9\u6cd5\uff0cXXX_async\u63d0\u4f9b\u4e86\u5bf9\u5e94\u7684\u5f02\u6b65\u5bc6\u96c6\u578b\u8ba1\u7b97\u6a21\u5f0f\uff0c\u8bf7\u7ed3\u5408\u6570\u636e\u91cf\u5224\u65ad\u662f\u5426\u4f7f\u7528\u5f02\u6b65\u7248\u672c\uff0c\u4e0b\u9762\u540c\u7406\u4e14\u4e0d\u518d\u4ecb\u7ecd\u4f5c\u7528</p> <p>\u4e0b\u4e00\u7bc7\uff1aMatrixType\u7684\u65b9\u6cd5</p>"},{"location":"API/Dart/methods/#new-from-v110","title":"[new from V1.1.0]","text":"<ul> <li>diff_center_async</li> <li>curve_async </li> <li>custom_curve_async </li> <li>replace_async </li> <li>replace_no_returned_async</li> <li>where_async</li> <li>all_async</li> <li>any_async </li> <li>counter_async</li> <li>reduce_async</li> <li>magic_async</li> <li>clip_reverse_async</li> <li>clip_reverse_no_returned_async</li> <li>customize_async</li> <li>findall_async</li> <li>confront_async</li> </ul>"},{"location":"API/Dart/operators/","title":"\u91cd\u8f7d\u64cd\u4f5c\u7b26","text":""},{"location":"API/Dart/operators/#_2","title":"\u6709\u54ea\u4e9b","text":"<ol> <li><code>[]</code>\u64cd\u4f5c\u7b26\u4f1a\u8fd4\u56de\u77e9\u9635\u67d0\u884c\u6570\u636e\u5bf9\u5e94\u7684\u5217\u8868</li> <li><code>+</code>\u64cd\u4f5c\u7b26\u4f7f\u5f97\u77e9\u9635\u52a0\u4e0a\u4e00\u4e2a\u540c\u5f62\u72b6\u7684\u77e9\u9635\u6216\u8005\u4e00\u4e2a\u6570\uff0c\u5e76\u4e14\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u77e9\u9635</li> <li><code>-</code>\u64cd\u4f5c\u539f\u7406\u540c\u4e0a</li> <li><code>/</code>\u64cd\u4f5c\u7b26\u5141\u8bb8\u77e9\u9635\u6574\u4f53\u9664\u4ee5\u4e00\u4e2a\u975e0\u6570\uff0c\u5e76\u4e14\u8fd4\u56de\u4e00\u4e2a\u65b0\u77e9\u9635</li> <li><code>*</code>\u64cd\u4f5c\u4f7f\u5f97\u4e24\u4e2a\u5f62\u72b6\u4e00\u6837\u7684\u77e9\u9635\u505a\u54c8\u8fbe\u9a6c\u79ef\u5e76\u4e14\u8fd4\u56de\u65b0\u7684\u77e9\u9635\uff0c\u6216\u8005\u53ef\u4ee5\u83b7\u53d6\u6269\u5927number\u500d\u7684\u65b0\u77e9\u9635</li> <li><code>&gt;&gt;</code>\u64cd\u4f5c\u4e00\u4e2a\u7531\u4e24\u4e2a\u6574\u6570\u6784\u6210\u7684\u5217\u8868\uff0c\u8868\u793a\u83b7\u53d6\u65b0\u5f62\u72b6\u7684\u77e9\u9635</li> <li><code>&lt;&lt;</code>\u64cd\u4f5c\u4e00\u4e2a\u7531\u4e24\u4e2a\u6574\u6570\u6784\u6210\u7684\u5217\u8868\uff0c\u5bf9\u77e9\u9635\u672c\u8eab\u8c03\u6574\u5f62\u72b6</li> <li><code>==</code>\u5224\u65ad\u4e24\u4e2a\u77e9\u9635\u662f\u4e0d\u662f\u5177\u6709\u76f8\u540c\u7684\u7279\u6b8a\u5c5e\u6027\u3001\u5f62\u72b6\u3001\u6570\u636e</li> <li><code>&gt;</code>|<code>&lt;</code>|<code>&gt;=</code>|<code>&lt;=</code>\u6bd4\u8f83\u4e24\u4e2a\u76f8\u540c\u5f62\u72b6\u7684\u77e9\u9635\u5bf9\u5e94\u4f4d\u7f6e\u4e0a\u7684\u6570\u636e\u5927\u5c0f\uff0c\u5e76\u8fd4\u56de\u540c\u5f62\u72b6\u7684List&gt;\uff1b\u5982\u679c\u6bd4\u8f83\u662f\u5426\u76f8\u7b49\uff0c\u8bf7\u8c03\u7528compare\u65b9\u6cd5\u5e76\u6307\u5b9amode\u4e3a0"},{"location":"API/Dart/operators/#_3","title":"<code>[]</code>","text":"<p>\u652f\u6301\u4e86\u591a\u79cd\u7d22\u5f15\u6a21\u5f0f\uff0c\u53ef\u4ee5\u66f4\u7075\u6d3b\u5730\u53d6\u6570\u636e\u4e86 - \u4f20\u5165\u4e00\u4e2a\u6574\u6570\uff1a\u83b7\u53d6\u67d0\u884c - \u4f20\u5165(int, )\uff1a\u83b7\u53d6\u4ece\u67d0\u884c\u5f00\u59cb\u77e9\u9635\uff0c\u76f8\u5f53\u4e8e\u8c03\u7528slice\u65b9\u6cd5\uff0cto\u8bbe\u7f6e\u4e3anull - \u4f20\u5165(int, int?)\uff1a\u83b7\u53d6\u4ece\u67d0\u884c\u5f00\u59cb\u77e9\u9635\uff0c\u76f8\u5f53\u4e8e\u8c03\u7528slice\u65b9\u6cd5\uff0c\u5982\u679c\u7b2c\u4e8c\u4e2a\u6574\u6570\u4e3anull\uff0cto\u8bbe\u7f6e\u4e3anull - \u4f20\u5165[int, int]\uff0c\u83b7\u53d6\u4f4d\u7f6e\u4e0a\u7684\u6570\u636e</p>"},{"location":"API/Dart/operators/#-","title":"<code>-</code>","text":"<p>\u6dfb\u52a0\u4e86\u4e00\u5143\u8d1f\u53f7\u8fd0\u7b97\u7b26\uff0c\u5141\u8bb8\u4e00\u4e2a\u5b9e\u4f8bobj\u7684<code>-obj</code>\u7684\u53d6\u53cd\u58f0\u660e</p> <p>\u4e0b\u4e00\u7bc7\uff1aMatrixType\u7684\u5c5e\u6027</p>"},{"location":"API/Dart/properties/","title":"MatrixType\u7684\u5c5e\u6027","text":"<p>\u5728MatrixType\u7684\u5c5e\u6027\u4e2d\uff0c\u4ec5shape\u548cself\u662f\u9700\u8981\u5728\u5b9e\u4f8b\u521b\u5efa\u65f6\u521d\u59cb\u5316\u7684\u3002</p>"},{"location":"API/Dart/properties/#shape","title":"shape\u5c5e\u6027","text":"<p>\u77e9\u9635\u7684\u5f62\u72b6\uff0c\u662f\u4e00\u4e2a\u5305\u542b\u4e24\u4e2a\u6574\u6570\u7684\u5217\u8868</p>"},{"location":"API/Dart/properties/#self","title":"self\u5c5e\u6027","text":"<p>self\u5c5e\u6027\u662f\u6307\u5411Matrix\u5b9e\u4f8b\u7684\u6307\u9488\uff0c\u867d\u7136self\u5c5e\u6027\u662f\u516c\u5f00\u5c5e\u6027\uff0c\u7136\u800c\u6211\u5e76\u4e0d\u5efa\u8bae\u64cd\u4f5c\u5b83\uff0c\u800c\u662f\u7528\u4e8e\u7ba1\u7406\u6784\u5efa\u65b0\u65b9\u6cd5\u65f6\u8c03\u7528\u3002Matrix\u7c7b\u672c\u8eab\u5373C\u8bed\u8a00\u4ee3\u7801\u4e2d\u5b9e\u73b0\u7684Matrix\u7ed3\u6784\u4f53\uff0c\u5b83\u5305\u542b\u4e8c\u7ef4\u6570\u7ec4\u3001\u7279\u6b8a\u5c5e\u6027\u3001row\u3001column\u4e24\u4e2a\u5c5e\u6027\uff0c\u989d\u5916\u58f0\u660eshape\u5c5e\u6027\u662f\u4e3a\u4e86\u66f4\u597d\u7684\u5728\u7c7b\u4e2d\u5b9e\u73b0\u4ee3\u7801\uff0c\u800c\u4e0d\u662f\u6bcf\u6b21\u90fd\u53bb\u8bbf\u95eerow\u3001column\uff0c\u5728\u5df2\u7ecf\u5b9e\u73b0\u7684\u65b9\u6cd5\u4e2d\uff0cMatrixType\u5b9e\u4f8b\u66f4\u65b0\u5f62\u72b6\u65f6shape\u4e5f\u4f1a\u53d8\u5316\u3002</p>"},{"location":"API/Dart/properties/#_1","title":"\u7279\u6b8a\u5c5e\u6027","text":"<p><pre><code>bool get identityMatrix =&gt; this.self.ref.spc.ref.identityMatrix;\nset identityMatrix(bool value) =&gt; this.self.ref.spc.ref.identityMatrix = value;\n\nbool get principalDiagonalMatrix =&gt; this.self.ref.spc.ref.principalDiagonalMatrix;\nset principalDiagonalMatrix(bool value) =&gt; this.self.ref.spc.ref.principalDiagonalMatrix = value;\n\nbool get upperTriangularMatrix =&gt; this.self.ref.spc.ref.upperTriangularMatrix;\nset upperTriangularMatrix(bool value) =&gt; this.self.ref.spc.ref.upperTriangularMatrix = value;\n\nbool get subDiagonalMatrix =&gt; this.self.ref.spc.ref.subDiagonalMatrix;\nset subDiagonalMatrix(bool value) =&gt; this.self.ref.spc.ref.subDiagonalMatrix = value;\n\nbool get lowerTriangularMatrix =&gt; this.self.ref.spc.ref.lowerTriangularMatrix;\nset lowerTriangularMatrix(bool value) =&gt; this.self.ref.spc.ref.lowerTriangularMatrix = value;\n\nbool get singularMatrix =&gt; this.self.ref.spc.ref.singularMatrix;\nset singularMatrix(bool value) =&gt; this.self.ref.spc.ref.singularMatrix = value;\n</code></pre> \u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u3002</p>"},{"location":"API/Dart/properties/#size","title":"size","text":"<p>\u83b7\u53d6\u77e9\u9635\u7684\u6570\u636e\u91cf\uff0c\u5b83\u7b49\u4e8erow * column</p>"},{"location":"API/Dart/properties/#issquare","title":"isSquare","text":"<p>\u5224\u65ad\u662f\u4e0d\u662f\u65b9\u9635</p>"},{"location":"API/Dart/properties/#t_","title":"T_","text":"<p>\u83b7\u53d6\u77e9\u9635\u7684\u8f6c\u7f6e\u77e9\u9635\uff0c\u662f\u65b9\u6cd5transpose\u7684\u5c5e\u6027\u7248\u672c</p>"},{"location":"API/Dart/properties/#trace","title":"trace","text":"<p>\u83b7\u53d6\u77e9\u9635\u7684\u8ff9\uff0c\u9488\u5bf9\u4efb\u4f55\u77e9\u9635\uff0c\u8bbf\u95ee\u6700\u5c0f\u7ef4\u5ea6\u51b3\u5b9a\u7684\u8ff9</p>"},{"location":"API/Dart/properties/#det","title":"det","text":"<p>\u83b7\u53d6\u65b9\u9635\u7684\u884c\u5217\u5f0f\u503c\uff0c\u5bf9\u4e8e\u4e00\u822c\u77e9\u9635\u91c7\u7528\u9ad8\u65af\u6d88\u5143\u6cd5</p>"},{"location":"API/Dart/properties/#inv","title":"inv","text":"<p>\u83b7\u53d6\u884c\u5217\u5f0f\u503c\u4e0d\u4e3a0\u7684\u65b9\u9635\u7684\u9006\u77e9\u9635</p>"},{"location":"API/Dart/properties/#adj","title":"adj","text":"<p>\u83b7\u53d6\u4efb\u610f\u65b9\u9635\u7684\u4f34\u968f\u77e9\u9635</p>"},{"location":"API/Dart/properties/#rank","title":"rank","text":"<p>\u83b7\u53d6\u77e9\u9635\u7684\u79e9\uff0c\u5229\u7528\u9ad8\u65af\u6d88\u5143\u6cd5\u5316\u4e0a\u4e09\u89d2\u77e9\u9635</p>"},{"location":"API/Dart/properties/#_2","title":"\u6570\u5b66\u5de5\u5177\u5c01\u88c5\u7684\u5c5e\u6027","text":"<pre><code>acos\\asin\\atan\\cos\\sin\\tan\\cosh\\sinh\\tanh\\exp\\log\\log10\\sqrt\\ceil\\fabs\\degrees  \n\n[new from V1.1.0]\ndegrees\uff1a\u6570\u503c\u8f6c\u4e3a\u89d2\u5ea6\n</code></pre> <p>\u5907\u6ce8\uff1a\u5728\u5229\u7528\u8fd9\u4e9b\u6570\u5b66\u65b9\u6cd5\u6765\u5904\u7406\u77e9\u9635\u4e2d\u6b63\u8d1f\u65e0\u7a77\u5927\u548cnan\u6570\u636e\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528setMask\u6765\u5904\u7406\u8fd9\u4e9b\u6570\u636e\u7684\u503c\u53d8\u6362\uff0c\u4f46\u8fd9\u4e5f\u4f1a\u4fee\u6539\u77e9\u9635\uff01\u56e0\u6b64\uff0c\u4f60\u53ef\u4ee5\u91c7\u7528\u77e9\u9635\u6df1\u62f7\u8d1d\u907f\u514d\u3002</p>"},{"location":"API/Dart/properties/#deepcopy","title":"deepcopy","text":"<p>\u63d0\u4f9b\u5b9e\u4f8b\u7684\u6df1\u62f7\u8d1d\u65b9\u6cd5</p>"},{"location":"API/Dart/properties/#atnew-from-v110","title":"At[new from V1.1.0]","text":"<p>\u5feb\u901f\u4fee\u6539\u67d0\u5355\u5143\u6570\u636e\uff0c\u4f20\u5165\u7684\u662f\u4e00\u4e2a\u4e09\u5143\u7d20\u7684\u8bb0\u5f55\u7c7b\u578b\uff0c\u5206\u522b\u8868\u793a\uff1arow\u7d22\u5f15\u3001column\u7d22\u5f15\u3001\u503c</p> <p>\u4e0b\u4e00\u7bc7\uff1a\u51e0\u4f55\u6570\u636e\u6a21\u62df</p>"},{"location":"Guide/getting-started/","title":"\u652f\u6301\u7684\u8bed\u8a00\u4e0e\u5e73\u53f0\u4e00\u89c8","text":""},{"location":"Guide/getting-started/#dart-on-windowslinuxandroid","title":"Dart on Windows/Linux/Android","text":""},{"location":"Guide/getting-started/#matply-v110","title":"[\ud83c\udf89] Matply V1.1.0\u5373\u5c06\u63a8\u51fa","text":"<p> 2024.12.15\u65e5\uff0c\u6211\u5df2\u5bf9Matply\u7684C\u5e95\u5c42\u5c3d\u53ef\u80fd\u7684\u5b9e\u73b0\u57fa\u4e8eOpenmp\u7684\u4f18\u5316\uff0c\u5e76\u4fee\u590d\u4e86\u90e8\u5206\u5df2\u77e5\u548c\u9047\u5230\u7684bug\uff1b\u53e6\u5916\uff0c\u6dfb\u52a0\u4e86\u90e8\u5206\u7684\u5b9e\u7528\u65b9\u6cd5\uff08\u5177\u4f53\u89c1\u6587\u6863\uff09\u3002\u7ecf\u8fc7\u8fd9\u6b21\u5e95\u5c42\u4f18\u5316\u548c\u6d4b\u8bd5\u7684\u7ecf\u9a8c\uff0c\u6211\u51b3\u5b9a\u5728\u4e0d\u4e45\u5b9e\u73b0\u4e00\u4e2a\u539f\u751f\u7684Dart's Matply\uff0c\u987a\u4fbf\u53ef\u4ee5\u89e3\u51b3\u5168\u5e73\u53f0\u7684\u95ee\u9898\u3002\u4ee5\u4e0b\u662f\u91cd\u5927\u7684\u5e95\u5c42\u6539\u53d8\u3002 </p> <ul> <li>\u79fb\u9664\u8bbe\u7f6e\u5355\u7ebf\u7a0b/\u591a\u7ebf\u7a0b\u7684\u65b9\u6cd5\uff0c\u5e95\u5c42\u9ed8\u8ba4\u662f\u591a\u7ebf\u7a0b\u968f\u673a\u6570\u751f\u6210\u51fd\u6570\uff0c\u4e0d\u9700\u8981\u62c5\u5fc3\u7ebf\u7a0b\u51b2\u7a81\u3002</li> <li>C+Openmp\u81ea\u52a8\u4f18\u5316\u6a21\u5f0f\u3002</li> <li>\u539f\u751f\u7684\u5f02\u6b65\u6a21\u5f0f\u89e3\u51b3\u5e95\u5c42\u51fd\u6570\u56de\u8c03\u7684\u672a\u4f18\u5316\u95ee\u9898</li> </ul> <p>\u4e0b\u4e00\u7bc7\uff1a\u5982\u4f55\u6784\u5efaDart\u7248\u672c\u7684API</p>"},{"location":"Guide/omp_design/","title":"MatPly\u7684\u5e95\u5c42Omp\u8bbe\u8ba1","text":""},{"location":"Guide/omp_design/#_1","title":"\u4e24\u79cd\u6a21\u5f0f","text":"<ul> <li>\u5b89\u5168\u7ebf\u7a0b\u6a21\u5f0f\u2014\u2014\u8303\u56f4\u5185\u4fee\u6539\u542f\u52a8\u91cf\uff0c\u8bbe\u7f6e\u7b2c\u4e00\u6b21\u7ebf\u7a0b\u542f\u52a8\u91cf\u4e4b\u540e\u4f1a\u4e0a\u9501\uff0c\u5728\u591a\u7ebf\u7a0b\u4e2d\u51b2\u7a81\u8bbe\u7f6e\u7684\u65f6\u5019\u53ea\u6309\u7167\u7b2c\u4e00\u4e2a\u542f\u52a8\u91cf</li> <li>\u5371\u9669\u7ebf\u7a0b\u6a21\u5f0f\u2014\u2014\u5f3a\u5236\u4fee\u6539\u542f\u52a8\u91cf\u5927\u5c0f\uff0c\u65e0\u89c6\u7ebf\u7a0b\u5b89\u5168\u548c\u6027\u80fd</li> </ul>"},{"location":"Guide/omp_design/#_2","title":"\u6838\u5fc3\u8bbe\u8ba1\u6982\u8981","text":"<ul> <li>\u65e0\u8bba\u662f\u5355\u5c42\u5faa\u73af\u8fd8\u662f\u5d4c\u5957\u5faa\u73af\uff0c\u591a\u7ebf\u7a0b\u5f00\u542f\u4f9d\u8d56\u603b\u6570\u636e\u91cf</li> <li>\u5d4c\u5957\u5faa\u73af\u5c3d\u91cf\u91c7\u7528\u574d\u584c\u4f18\u5316\uff08collaspe\uff09\uff0c\u5355\u5faa\u73af\u5c3d\u91cf\u91c7\u7528simd\u6307\u4ee4</li> <li>\u5e95\u5c42\u4e0d\u4f18\u5316\u7684\u65b9\u6cd5\u53ef\u80fd\u5728\u522b\u7684\u8bed\u8a00\u5c42\u4f18\u5316\u4e14\u4f1a\u88ab\u8bb0\u5f55\uff0cno_multp_msg\u6807\u8bb0\u7684\u672a\u4f18\u5316\u65b9\u6cd5\u591a\u548c\u51fd\u6570\u56de\u8c03\u6709\u5173\u4e14\u5185\u90e8\u5c3d\u91cf\u4e0d\u9884\u5206\u914d\u5185\u5b58\uff0c\u800c\u662f\u8fb9\u5de5\u4f5c\u8fb9\u5206\u914d\u5185\u5b58</li> </ul>"},{"location":"Guide/omp_design/#_3","title":"\u5df2\u4f18\u5316\u5e93(\u6216\u8005\u4e0d\u7528\u4f18\u5316\u7684)","text":"<ul> <li>mp_omp</li> <li>mp_cfg</li> <li>mp_auxiliary</li> <li>mp_base</li> <li>mp_manage</li> <li>mp_point2d</li> <li>mp_linalg</li> <li>mp_random</li> <li>mp_geometry</li> </ul>"},{"location":"Guide/omp_design/#_4","title":"\u8bbe\u8ba1\u6a21\u5f0f\u84dd\u56fe","text":"<pre><code>graph LR;\n    Omp[mp_omp]\n    Cfg[mp_cfg]\n    Auxiliary[mp_auxiliary]\n    Base[mp_base]\n    Omp--core--&gt;Auxiliary\n    Cfg--core--&gt;Auxiliary\n    Auxiliary--&gt;Base\n    Linglg[mp_linglg]\n    Auxiliary--&gt;Linglg\n    Point2d[mp_point2d]\n    Auxiliary--&gt;Point2d\n    Random[mp_random]\n    Base---&gt;Random\n    Linglg---&gt;Random\n    Geometry[mp_geometry]\n    Point2d---&gt;Geometry\n\n    Manage[mp_manage]\n    Omp_copy[mp_omp]\n    Cfg_copy[mp_cfg]\n    Cfg_copy--wrapper---&gt;Manage\n    Omp_copy--wrapper---&gt;Manage</code></pre>"},{"location":"Guide/plan/","title":"\u672a\u6765\u8ba1\u5212","text":"<ul> <li>\u66f4\u591a\u5e73\u53f0\u652f\u6301</li> <li>[\u221a] \u4f7f\u7528OpenMP\u8fdb\u884c\u77e9\u9635\u591a\u7ebf\u7a0b\u8fd0\u7b97\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u7ebf\u7a0b\u6570\u3001\u7ed9\u6307\u5b9a\u51fd\u6570\u5f00\u542f\u7ebf\u7a0b\u7b49\u7b49\u7b49</li> </ul>"}]}